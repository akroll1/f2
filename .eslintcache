[{"/Users/andrewkroll/Documents/Projects/f2/src/index.js":"1","/Users/andrewkroll/Documents/Projects/f2/src/reportWebVitals.js":"2","/Users/andrewkroll/Documents/Projects/f2/src/pages/app.js":"3","/Users/andrewkroll/Documents/Projects/f2/src/pages/home.js":"4","/Users/andrewkroll/Documents/Projects/f2/src/components/layout.js":"5","/Users/andrewkroll/Documents/Projects/f2/src/components/footer.js":"6","/Users/andrewkroll/Documents/Projects/f2/src/css/layout.js":"7","/Users/andrewkroll/Documents/Projects/f2/src/components/page-components/footer-links.js":"8","/Users/andrewkroll/Documents/Projects/f2/src/components/header.js":"9","/Users/andrewkroll/Documents/Projects/f2/src/components/title.js":"10","/Users/andrewkroll/Documents/Projects/f2/src/css/home.js":"11","/Users/andrewkroll/Documents/Projects/f2/src/pages/news.js":"12","/Users/andrewkroll/Documents/Projects/f2/src/css/core.js":"13","/Users/andrewkroll/Documents/Projects/f2/src/css/news.js":"14","/Users/andrewkroll/Documents/Projects/f2/src/pages/live.js":"15","/Users/andrewkroll/Documents/Projects/f2/src/pages/boxers.js":"16","/Users/andrewkroll/Documents/Projects/f2/src/helpers.js":"17","/Users/andrewkroll/Documents/Projects/f2/src/pages/not-found.js":"18","/Users/andrewkroll/Documents/Projects/f2/src/components/player-components/player.js":"19","/Users/andrewkroll/Documents/Projects/f2/src/css/live.js":"20","/Users/andrewkroll/Documents/Projects/f2/src/components/player-components/timer.js":"21","/Users/andrewkroll/Documents/Projects/f2/src/components/video-thumbs.js":"22","/Users/andrewkroll/Documents/Projects/f2/src/components/chat.js":"23","/Users/andrewkroll/Documents/Projects/f2/src/pages/dashboard.js":"24","/Users/andrewkroll/Documents/Projects/f2/src/components/utilities/editor.js":"25","/Users/andrewkroll/Documents/Projects/f2/src/css/editor.js":"26"},{"size":599,"mtime":1610239296287,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1609791266683,"results":"29","hashOfConfig":"28"},{"size":1705,"mtime":1611417964582,"results":"30","hashOfConfig":"28"},{"size":2251,"mtime":1611282742406,"results":"31","hashOfConfig":"28"},{"size":336,"mtime":1609851385307,"results":"32","hashOfConfig":"28"},{"size":432,"mtime":1611013788379,"results":"33","hashOfConfig":"28"},{"size":2706,"mtime":1611332262223,"results":"34","hashOfConfig":"28"},{"size":612,"mtime":1609793797765,"results":"35","hashOfConfig":"28"},{"size":622,"mtime":1610982194269,"results":"36","hashOfConfig":"28"},{"size":283,"mtime":1610935982931,"results":"37","hashOfConfig":"28"},{"size":4865,"mtime":1611285910967,"results":"38","hashOfConfig":"28"},{"size":5127,"mtime":1611110177456,"results":"39","hashOfConfig":"28"},{"size":618,"mtime":1611424338546,"results":"40","hashOfConfig":"28"},{"size":3032,"mtime":1611311623012,"results":"41","hashOfConfig":"28"},{"size":9866,"mtime":1611409768936,"results":"42","hashOfConfig":"28"},{"size":9425,"mtime":1610200100554,"results":"43","hashOfConfig":"28"},{"size":2356,"mtime":1611002747828,"results":"44","hashOfConfig":"28"},{"size":512,"mtime":1610287930722,"results":"45","hashOfConfig":"28"},{"size":3989,"mtime":1611417601207,"results":"46","hashOfConfig":"28"},{"size":6081,"mtime":1611417645512,"results":"47","hashOfConfig":"28"},{"size":1036,"mtime":1611234308416,"results":"48","hashOfConfig":"28"},{"size":865,"mtime":1611002674048,"results":"49","hashOfConfig":"28"},{"size":792,"mtime":1611234571932,"results":"50","hashOfConfig":"28"},{"size":22875,"mtime":1611424516108,"results":"51","hashOfConfig":"28"},{"size":9875,"mtime":1611432326581,"results":"52","hashOfConfig":"28"},{"size":3491,"mtime":1611432623560,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"5gd2vt",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrewkroll/Documents/Projects/f2/src/index.js",[],["119","120"],"/Users/andrewkroll/Documents/Projects/f2/src/reportWebVitals.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/pages/app.js",["121","122"],"import React from 'react';\nimport {Switch, Route, useLocation} from 'react-router-dom'\nimport Layout from '../components/layout'\nimport Home from './home';\nimport News from './news';\nimport Live from './live';\nimport Boxers from './boxers';\nimport Dashboard from './dashboard';\nimport NotFound from './not-found';\nimport { animated, useTransition } from \"react-spring\";\nimport TagManager from 'react-gtm-module'\n\n// import About from '../../Components/About';\n// import GymsPage from '../Gyms';\n// import ShowsPage from '../Shows';\n// import Show from '../Shows/Show';\n// import Article from '../Articles/Article';\n// import Books from '../Books';\n// import AdminDashboard from '../../Admin/AdminDashboard';\n// import Api from '../../Components/API/Api';\n// import ReactGA from 'react-ga';\nconst tagManagerArgs = {\n    gtmId: 'GTM-WCHF53X'\n};\nTagManager.initialize(tagManagerArgs)\n\nconst App = () => {\n\tconst location = useLocation();\n\n\treturn (\n\t\t<Layout>\n\t\t\t<Switch location={location}>\n\t\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t\t<Route exact path=\"/news\" component={News} />\n\t\t\t\t<Route exact path=\"/boxers\" component={Boxers} />\n\t\t\t\t<Route exact path=\"/live\" component={Live} />\n\t\t\t\t<Dashboard exact path=\"/api/dashboard\" />\n\t\t\t\t{/*<About exact path=\"/about\" />\n\t\t\t\t<GymsPage exact path=\"/gyms\" />\n\t\t\t\t<ShowsPage exact path=\"/shows\" />\n\t\t\t\t<Article exact path=\"/article/:article\" />\n\t\t\t\t<Show exact path=\"/shows/:show\" />\n\t\t\t\t<Books exact path=\"/books\" />\n\t\t\t\t<Books exact path=\"/book/:book\" />\n\t\t\t\t<Api exact path=\"/api\" />\n\t\t\t\t<AdminDashboard exact path=\"/api/dashboard/admin/videoform\" />\n\t\t\t\t*/}\n\t\t\t\t<Route path=\"*\" component={NotFound}/> \n\t\t\t</Switch>\n\t\t</Layout>\n\t)\n};\nexport default App;\n","/Users/andrewkroll/Documents/Projects/f2/src/pages/home.js",["123","124","125","126","127","128","129"],"import React, {useState, useEffect} from 'react'\nimport { useSpring, animated as a } from 'react-spring'\nimport {Title} from '../components/title'\nimport {VideoWrapper,HeroSubtext,HeroWrapper,HeroDiv2,HeroVideoText,HeroDiv1,HeroText,HeroImg,NewsButton} from '../css/home'\nimport '../css/spring.css'\nimport { RiArrowRightSLine } from \"react-icons/ri\"\nimport axios from 'axios'\nimport VideoThumbs from '../components/video-thumbs'\n\nconst Home = () => {\n    const [flipped, set] = useState(false);\n    const [tonight, showTonight] = useState(false);\n    const [videos, setVideos] = useState([]);\n    const { transform, opacity } = useSpring({\n        opacity: flipped ? 1 : 0,\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n        config: { mass: 5, tension: 400, friction: 80 }\n    })\n    const bingUrl = `https://api.bing.microsoft.com/v7.0/videos/search?q=boxing&count=30`;\n\tlet bingConfig = {\n\t\theaders: {\n\t\t\t'Ocp-Apim-Subscription-Key':'6a73128b44654f1fa4495445ffb5b927',\n\t\t\t'data':'jsonp'\n\t\t\t// 'Access-Control-Allow-Origin':'*'\n\t\t}\n\t};\n    useEffect(() => {\n        const getVideos = async () => {\n\t\t\tawait axios(bingUrl, bingConfig)\n                .then(res => setVideos(res.data.value))\n\t\t\t\t// .then(() => console.log('val: ',res))\n\t\t\t\t// .then(() => setLoading(false))\n\t\t\t\t.catch(err => console.log(err));\n\t\t}\n\t\tgetVideos()\n    },[]);\n    \n    console.log('videos: ',videos)\n    return (\n        <>\n            <Title/>\n            <HeroWrapper>\n                <HeroDiv1>\n                    <HeroText>Latest Boxing News</HeroText>\n                    <HeroSubtext>Updated in Real Time</HeroSubtext>\n                    <NewsButton to=\"/news\">News<span style={{marginLeft: '1rem',marginTop: '8px'}}><RiArrowRightSLine /></span></NewsButton>\n                </HeroDiv1>\n                <HeroDiv2>\n                    <HeroImg src=\"/boxer_in_ring.jpg\"></HeroImg>\n                </HeroDiv2>\n            </HeroWrapper>\n            <VideoWrapper>\n            <HeroVideoText style={{display: 'block',width: '100%',padding:'2rem',marginLeft: '2rem',paddingBottom:'0'}}>Latest Boxing Videos</HeroVideoText>\n                <VideoThumbs videos={videos}/>\n            </VideoWrapper>\n        </>\n    )\n}\nexport default Home","/Users/andrewkroll/Documents/Projects/f2/src/components/layout.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/components/footer.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/css/layout.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/components/page-components/footer-links.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/components/header.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/components/title.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/css/home.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/pages/news.js",["130","131","132","133"],"import React, {useState, useEffect} from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport { Heading, Loader,Spinner } from '../css/core';\nimport {NewsButton,SearchWrapper,NewsCard,NewsWrapper,TagsContainer,TagUl,Tag} from '../css/news'\nimport axios from 'axios'\nimport {shortenBody} from '../helpers'\n\nconst News = () => {\n\tconst bingUrl = `https://api.bing.microsoft.com/v7.0/news/search?q=boxing&count=30`;\n\tconst [loading,setLoading] = useState(true);\n\tconst [news, setNews] = useState([]);\n\tconst [tags, setTags] = useState([]);\n\tconst [searchInput, setSearchInput] = useState([]);\n\tconst [query, setQuery] = useState('');\n\tlet bingConfig = {\n\t\theaders: {\n\t\t\t'Ocp-Apim-Subscription-Key':'6a73128b44654f1fa4495445ffb5b927',\n\t\t\t'data':'jsonp',\n\t\t\t'Access-Control-Allow-Origin':'*'\n\t\t}\n\t};\n\tuseState(() => {\n\t\tconst getArticles = async () => {\n\t\t\tawait axios(bingUrl, bingConfig)\n\t\t\t\t.then(res => setNews(res.data.value))\n\t\t\t\t.then(() => setLoading(false))\n\t\t\t\t.catch(err => console.log(err));\n\t\t}\n\t\tgetArticles()\n\t},[])\t\n\n    const handleSelectChange = inputs => {\n        if(inputs == null){\n            return setQuery('');\n        }\n        console.log('inputs: ',inputs);\n\t\treturn setSearchInput(inputs.label)\n\t};\n\tconst handleInputChange = input => {\n        setQuery(input)\n    };\n    // console.log('query: ',query);\n    // console.log('searchInput: ',searchInput);\n\tconst handleSearchSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tlet query = searchInput.split(' ').join('+');\n\n\t\tlet newQuery = `https://api.cognitive.microsoft.com/bing/v7.0/news/search/?q=boxing+${query}&count=30&jsonp`;\n\t\tlet headers = {\n\t\t\theaders: bingConfig\n\t\t};\n        await axios(newQuery, bingConfig)\n            // .then(res => console.log('res: ',res))\n\t\t\t.then(res => setNews(res.data.value))\n\t\t\t.then(() => createTags())\n\t\t\t.catch(err => console.log(err));\n\t}\n\n\tconst createTags = () => {\n\t\tlet array = news;\n\t\tlet temp = array\n\t\t\t.filter(article => {\n\t\t\t\treturn article.about;\n\t\t\t})\n\t\t\t.map(article => {\n\t\t\t\treturn article.about.map(name => {\n\t\t\t\t\treturn name.name;\n\t\t\t\t});\n\t\t\t});\n\t\tlet tags = [].concat.apply([], temp);\n\t\tlet tenTags = [...new Set(tags)].slice(0,9);\n\t\treturn setTags(tenTags);\n\t};\n\n\tconst handleTagClick = async name => {\n\t\tthis.setState(state => ({ loading: true }));\n\t\tlet transformedQuery = name.replace(' ', '+').trim();\n\t\tlet newQuery =\n\t\t\t'https://api.bing.microsoft.com/v7.0/news/trendingtopics?q=boxing+' +\n\t\t\ttransformedQuery +\n\t\t\t'&count=30&jsonp';\n\t\tlet headers = {\n\t\t\theaders: bingConfig\n\t\t};\n\t\tawait axios(newQuery, headers)\n\t\t\t.then(res => setNews(res.value))\n\t\t\t.then(() => createTags())\n\t\t\t.catch(err => console.error(err));\n\t}\n\n\tconst createSelectOptions = tags => {\n\t\t// only using 10 tags for mobile.\n\t\treturn tags.slice(0, 9).map(tag => ({value: tag, label:tag }));\n\t};\n\t\n\tconst options = tags && tags.length > 0\n\t\t? createSelectOptions(tags)\n\t\t: [];\n\n\tconst renderTags = tags && tags.length > 0\n\t\t? tags.map((tag, i) => (\n\t\t\t<Tag\n\t\t\t\tonClick={() => handleTagClick(tag)}\n\t\t\t\tkey={i}>\n\t\t\t\t{tag}\n\t\t\t</Tag>\n\t\t))\n\t\t: [];\n\n\tconst stories = news && news.length > 0 \n\t\t? news.map((story, i) => (\n\t\t\t<NewsCard key={i}>\n\t\t\t\t<a style={{textDecoration: 'none'}} href={story.url} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\t<h2 style={{paddingTop: '1rem',paddingLeft: '1rem',color: '#333'}}>{story.name}</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tstyle={{margin: 'auto',padding: '0 2rem',float: 'left',display: 'block'}}\n\t\t\t\t\t\t\t// src={story.image ? story.image.thumbnail.contentUrl : boxerPic}\n\t\t\t\t\t\t\t// alt={boxerPic}\n\t\t\t\t\t\t\tsrc={story.image ? story.image.thumbnail.contentUrl : ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t<p style={{textAlign: 'left',color: '#333',margin: '0 auto'}}>{shortenBody(story.description)}</p>\n\t\t\t\t\t\t<h5 style={{textAlign: 'left',color: '#bf6f6d'}}>{story.provider ? story.provider[0].name : ''}</h5>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t</NewsCard>\n\t\t))\n\t\t: [];\n\t\t// console.log('tags: ',tags);\n\treturn (\n\t\t<>\n\t\t\t<Heading variant=\"h3\" style={{fontWeight:'bold',margin: '1rem'}}>The Latest Boxing News</Heading>\n\t\t\t<SearchWrapper>\n\t\t\t\t<form onSubmit={e => e.preventDefault()} className=\"search\">\n\t\t\t\t\t<label htmlFor=\"shows-page-search-input\">\n\t\t\t\t\t\tNeed more boxing News?\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<CreatableSelect\n                        isClearable\n                        onChange={handleSelectChange}\n                        onInputChange={handleInputChange}\n\t\t\t\t\t\toptions={options}\n                        placeholder=\"Select or type to search...\"\n                        formatCreateLabel={() => query}\n\t\t\t\t\t/>\n\t\t\t\t\t<NewsButton\n\t\t\t\t\t\tonClick={e => handleSearchSubmit(e)}>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</NewsButton>\n\t\t\t\t</form>\n\t\t\t</SearchWrapper>\n\t\t\t{loading && <Loader><Spinner src={'./spinner.svg'} alt=\"Spinner\" /></Loader>}\n\t\t\t{!loading && (\n\t\t\t\t<TagsContainer style={{paddingBottom: '0'}}>\n\t\t\t\t\t<TagUl>\n\t\t\t\t\t\t<Heading style={{margin: '0'}} variant=\"h5\">Trending Now</Heading>\n\t\t\t\t\t\t{/* {renderTags} */}\n\t\t\t\t\t</TagUl>\n\t\t\t\t</TagsContainer>\n\t\t\t)}\n\n\t\t\t\t<NewsWrapper>{stories}</NewsWrapper>\n\t\t\t{/*<video src=\"http://dc8ybk017oo9b.cloudfront.net/mactown.mp4\" autoPlay></video>*/}\n\t\t</>\n\t);\n}\nexport default News","/Users/andrewkroll/Documents/Projects/f2/src/css/core.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/css/news.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/pages/live.js",["134","135","136","137","138","139","140","141"],"import React, {useEffect, useState} from 'react';\nimport {ChatButton,ChatForm,ChatInput,LiveAside,LiveSection,LiveWrapper,ButtonWrapper,GameText,VideoOverlayDiv,VideoOverlayText,PageBreak,TimerText,ScoreAndTimerDiv,LeaderboardWrapper, LeaderboardUl, Li,PlayerWrapper,Button,QuestionText,Text,AnswersWrapper} from '../css/live';\nimport Player from '../components/player-components/player';\nimport Timer from '../components/player-components/timer';\nimport jwt_decode from 'jwt-decode'\nimport {slicedGame, getGameType} from '../helpers'\nimport {CSSTransition} from 'react-transition-group'\nimport '../css/transitions.css'\nimport Chat from '../components/chat'\n\nconst Live = ({location}) => {\n    // const gameType = getGameType(location.pathname);\n    const gameType = 'quiz';\n    // const {game, playbackUrl} = location;\n    // const game = window.location.pathname.split(\"/\").pop();\n\n    const game = \"kroll-7\";\n    // only need access token, ID token can immediately be rolled over into user, in useEffect...\n    const [chatMessages,setChatMessages] = useState([{\n        id: '1234-5678-90',\n        message: 'here is a message',\n        senderName: 'Bobby'\n    },{\n        id: '1234-5678-90',\n        message: 'here is a second message',\n        senderName: 'Mike'\n    },{\n        id: '1234-5678-90',\n        message: 'here is a third message',\n        senderName: 'Bobby'\n    }]);\n    const [chatInput, setChatInput] = useState('');\n    const [isTyping, setIsTyping] = useState(true);\n    const [token, setToken] = useState('');\n    const [user, setUser] = useState({});    \n\n    const [score, setScore] = useState(0);\n    const [showScore, setShowScore] = useState(false);\n    const [displayTime, setDisplayTime] = useState(null);\n    const [startTimer, setStartTimer] = useState(false);\n    const [buttonsDisabled, setButtonsDisabled] = useState(false);\n    \n    const [leaders, setLeaders] = useState(null);\n    const [counter, setCounter] = useState(100);\n    const [startBroadcast,setStartBroadcast] = useState(false);\n    const [wrongAnswerMessaging, setWrongAnswerMessaging] = useState(false);\n    const [gameOverMessaging, setGameOverMessaging] = useState(false);\n    \n    const [question, setQuestion] = useState({\n        question: '<Questions will appear here>',\n            answersArray: ['Answer 1','Answer 2','Answer 3'],\n            answerIndex: 1,\n            questionId: '12345-678910-1223'\n        });\n    \n    const [websocket, setWebsocket] = useState({});\n    \n    useEffect(() => {\n        // let idToken = jwt_decode(localStorage.getItem('id_token'));\n        // let token = localStorage.getItem('id_token');\n        // setToken(token);\n        // setUser({sub: idToken.sub, email: idToken.email, game});\n        setUser({sub: '123-456-789', email: 'idToken.email', game});\n        let token = '1234';\n        setWebsocket(new WebSocket(process.env.REACT_APP_WS_URL+`?token=${token}`));\n    },[]);\n    \n    websocket.onclose = (closeEvent) => {\n        setTimeout(() => setReopenSocket(true),2000);\n    };\n    const setReopenSocket = () => {\n        console.log('reopening websocket...');\n        setWebsocket(new WebSocket(process.env.REACT_APP_WS_URL+`?token=${token}`));\n    };\n    websocket.onopen = (data) => {\n        console.log('websocket: ',data);\n        if(data){\n            sendUserData();\n        }\n    }\n    websocket.onmessage = ({data}) => {\n        console.log('data 98: ',data);\n        const {Data, leaders, gameStatus, predictive} = JSON.parse(data);\n        if(data && Data && typeof Data.score == 'number') setScore(Data.score);\n        if(leaders && leaders.length > 0)setLeaders(leaders);\n        if(data && gameStatus === 'started') setStartBroadcast(true);\n        if(data && gameStatus === 'over') setGameOverMessaging(true);\n    }\n\n    const sendUserData = () => {\n        websocket.send(JSON.stringify({ action: 'routeUserData', data: {...user}}));\n    };\n    const sendQuizAnswer = e => {\n        setButtonsDisabled(true);\n        let time = getTime();\n        if(e.target.id == question.answerIndex){\n            setScore(time+score);\n            let userAnswer = {\n                id: question.questionId,\n                answer: true,\n                time\n            };\n            websocket.send(JSON.stringify({ action: 'routeAnswer', data: {...user,...userAnswer}}));\n        } else {\n            setWrongAnswerMessaging(true);\n        }\n        setButtonsDisabled(x => !x);\n        setStartTimer(x => !x);\n        setShowScore(x => !x);\n        setDisplayTime(time);\n        getLeaders();\n    };\n    const sendPollAnswer = e => {\n        setButtonsDisabled(true);\n        let userAnswer = {\n            id: question.questionId,\n            pollAnswerIndex: e.target.id \n        }\n        websocket.send(JSON.stringify({ action: 'routePoll', data: {...user,...userAnswer}}));\n    };\n\n    const getLeaders = () => {\n        setTimeout(function() {\n            websocket.send(JSON.stringify({action: 'leaderboard',data: {...user}}));\n            setShowScore(false);\n            setWrongAnswerMessaging(false);\n            let timer = document.getElementById('timer');\n            timer.innerText = 100;\n            setCounter(100);\n        }.bind(this),8000)\n    };\n    \n    const getTime = () => {\n        let timer = document.getElementById(\"timer\");\n        let time = parseInt(timer.innerText);\n        timer.innerHTML = time;\n        return time;\n    }\n    const onChatSubmit = (e) => {\n        e.preventDefault();\n        let message = {\n            id: 'here is id',\n            senderName:'name here',\n            message: chatInput\n        };\n        setChatInput('');\n        setChatMessages([...chatMessages,message]);\n    }\n    const handleChatInput = (e) => {\n        setChatInput(e.target.value);\n    };\n\n    console.log('chatMessages: ',chatMessages);\n    return (\n        <LiveWrapper>\n            <LiveAside>\n                <p>List of Games goes here.</p>\n            </LiveAside>\n            <LiveSection>\n                <VideoOverlayDiv style={{margin: 'auto'}}>\n                    <div style={{minHeight:'3rem'}}>\n                        {wrongAnswerMessaging && <VideoOverlayText>Sorry, wrong answer!</VideoOverlayText>}\n                        {!wrongAnswerMessaging && showScore && <VideoOverlayText>Correct! Score: <span>{displayTime}</span></VideoOverlayText>}\n                        {!wrongAnswerMessaging && !showScore &&<VideoOverlayText>IMPULSE</VideoOverlayText>}\n\n                    </div>\n                    \n                    {gameOverMessaging && !startBroadcast && <VideoOverlayText>Game Over</VideoOverlayText>}\n                </VideoOverlayDiv>\n\n                <CSSTransition\n                    appear\n                    timeout={400}\n                    in={true}\n                    classNames={\"form\"}\n                    unmountOnExit\n                    >\n                <GameText>Game: {slicedGame(game)}</GameText>\n                </CSSTransition>\n                <ScoreAndTimerDiv>\n                    <TimerText>Score: {score}</TimerText>\n                    {gameType !== 'predictive' &&\n                        <Timer \n                        gameType={gameType}\n                        setStartTimer={setStartTimer}\n                        startTimer={startTimer}\n                        setShowScore={setShowScore}\n                        showScore={showScore}\n                        setButtonsDisabled={setButtonsDisabled}\n                        counter={counter}\n                        setCounter={setCounter}\n                        />\n                    }\n                    </ScoreAndTimerDiv>\n                <PlayerWrapper style={startBroadcast ? {pointerEvents:'none'} : {pointerEvents:'auto'}}>\n                    <Player \n                        setStartTimer={setStartTimer}\n                        setButtonsDisabled={setButtonsDisabled}\n                        setQuestion={setQuestion}\n                        setStartBroadcast={setStartBroadcast}\n                        startBroadcast={startBroadcast}\n                        />\n                    <AnswersWrapper style={{marginTop:'0'}} buttonsDisabled={buttonsDisabled}>\n                        <QuestionText>{question.question}</QuestionText>\n                        <ButtonWrapper>\n                            {\n                                gameType === 'quiz' && question && question.answersArray.map((answer,i) => <Button width={question.answersArray.length === 4 ? 4 : 3} buttonsDisabled={buttonsDisabled} id={i} key={i} onClick={e => sendQuizAnswer(e)}>{answer}</Button>)\n                            }\n                        </ButtonWrapper>\n                    </AnswersWrapper>\n                </PlayerWrapper>\n                <PageBreak />\n                <LeaderboardWrapper>\n                    <Text>{gameType === 'poll' ? 'Poll Results' : 'Leader Board'}</Text>\n                    <LeaderboardUl>\n                    {\n                        leaders && leaders.length > 0 \n                        ? leaders.map(({email,score},i) => <Li key={i}>{i+1}. {email}: {score}</Li>)\n                        : null\n                    }\n                    </LeaderboardUl>\n                </LeaderboardWrapper>\n            </LiveSection>\n            <LiveAside style={{maxHeight:'50%',border:'1px solid lightgray',overflow:'scroll'}}>\n                <Chat chatMessages={chatMessages} isTyping={isTyping} />\n                <ChatForm  onSubmit={onChatSubmit}>\n                    <ChatInput \n                        id=\"chat\"\n                        onChange={(e) => handleChatInput(e)}\n                        placeholder=\"Message\" \n                        value={chatInput}\n                    />\n                    <ChatButton>Send</ChatButton>\n                </ChatForm>\n            </LiveAside>\n        </LiveWrapper>\n    );\n}\n\nexport default Live;","/Users/andrewkroll/Documents/Projects/f2/src/pages/boxers.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],"import React, {useState, useEffect} from 'react';\nimport { API, Analytics, Storage, graphqlOperation } from 'aws-amplify';\nimport { S3Album, S3Image } from 'aws-amplify';\nimport Coverflow from 'react-coverflow';\nimport { TwitterTimelineEmbed, TwitterShareButton } from 'react-twitter-embed';\nimport { getSelectedBoxer, makeImagesArr, makeLabelsArr } from '../helpers'\nimport {B as Button} from '../css/core'\nimport {Loader, Spinner} from '../css/core'\n// import * as Query from '../../graphql/queries.js';\n// import { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton } from 'react-twitter-embed';\n// Storage.configure({ level: 'public' });\n\nconst Boxers = () => {\n\tconst [boxers, setBoxers] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [userSub, setUserSub] = useState('');\n\tconst [selectedBoxer, setSelectedBoxer] = useState({});\n\n\t// useEffect(() => {\n\t// \tconst getListOfBoxers = async () => {\n\t// \t\tawait API.graphql(graphqlOperation(Query.listBoxers))\n\t// \t\t\t.then(allBoxers => {\n\t// \t\t\t\tlet boxers = allBoxers.data.listBoxers.items;\n\t// \t\t\t\tlet rand = Math.floor(Math.random() * boxers.length);\n\t// \t\t\t\tlet selectedBoxer = boxers[rand];\n\t// \t\t\t\tlet index = rand;\n\t// \t\t\t\tthis.setState(state => ({\n\t// \t\t\t\t\tboxers,\n\t// \t\t\t\t\tselectedBoxer,\n\t// \t\t\t\t\tindex,\n\t// \t\t\t\t\tloading: false\n\t// \t\t\t\t}));\n\t// \t\t\t})\n\t// \t\t\t.catch(err =>\n\t// \t}\n\t// },[])\n\n// class Boxers extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tuserSub: '',\n// \t\t\tboxers: [],\n// \t\t\tselectedBoxer: {},\n// \t\t\tindex: null,\n// \t\t\tloading: true\n// \t\t};\n// \t}\n// \tasync componentDidMount() {\n// \t\tawait API.graphql(graphqlOperation(Query.listBoxers))\n// \t\t\t.then(allBoxers => {\n// \t\t\t\tlet boxers = allBoxers.data.listBoxers.items;\n// \t\t\t\tlet rand = Math.floor(Math.random() * boxers.length);\n// \t\t\t\tlet selectedBoxer = boxers[rand];\n// \t\t\t\tlet index = rand;\n// \t\t\t\tthis.setState(state => ({\n// \t\t\t\t\tboxers,\n// \t\t\t\t\tselectedBoxer,\n// \t\t\t\t\tindex,\n// \t\t\t\t\tloading: false\n// \t\t\t\t}));\n// \t\t\t})\n// \t\t\t.catch(err => console.error(err));\n// \t}\n\tconst makeImagesArr = boxers => {\n\t\tlet arr = [];\n\t\treturn boxers.map(boxer => {\n\t\t\tlet imageUrl =\n\t\t\t\t'https://s3.amazonaws.com/boxers/public/' + boxer.boxerProfilePic;\n\t\t\tarr.push(imageUrl);\n\t\t\treturn arr;\n\t\t});\n\t};\n\tconst makeLabelsArr = boxers => {\n\t\tlet arr = [];\n\t\treturn boxers.map(boxer => {\n\t\t\tlet { boxerFirstName, boxerRingname, boxerLastName } = boxer;\n\t\t\tlet label = boxerFirstName + ' \"' + boxerRingname + '\" ' + boxerLastName;\n\t\t\tarr.push(label);\n\t\t\treturn arr;\n\t\t});\n\t};\n\tconst getSelectedBoxer = index => {\n\t\t// console.log('index: ', index);\n        let selectedBoxer = boxers[index];\n        setSelectedBoxer(selectedBoxer);\n\t};\n\n    let {\n        boxerFirstName,\n        boxerLastName,\n        boxerRingname,\n        boxerState,\n        boxerCity,\n        wins,\n        losses,\n        draws,\n        kos,\n        boxerTwitter,\n        boxerFacebook,\n        boxerInstagram,\n        boxerGym\n    } = selectedBoxer && selectedBoxer.boxerFirstName ? selectedBoxer : {};\n\n\t\tlet { ringName } =\n\t\t\tselectedBoxer && selectedBoxer.boxerFirstName\n\t\t\t\t? selectedBoxer\n\t\t\t\t: {};\n\t\tlet twitterOptions = {\n\t\t\ttext: { ringName } + ' is awesome',\n\t\t\tvia: 'fightcloud.live'\n\t\t};\n\t\tlet labelsArr = boxers ? this.makeLabelsArr(boxers) : [];\n\t\tlet imagesArr = boxers ? this.makeImagesArr(boxers) : [];\n\t\t// let { index } = this.state;\n\t\tlet albumPath = 'BOXER/' + userSub;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t    {loading && <Loader><Spinner src={'./spinner.svg'} alt=\"Spinner\" /></Loader>}\n\t\t\t\t{!loading && (\n                        <div className=\"boxers-wrapper\">\n                            <h1 className=\"featured-boxers\">\n                                Featured <span class=\"middle\"> | </span>Boxers\n                            </h1>\n                        </div>\n                )}\n            </>\n                //             <div className=\"coverflow\">\n                //                 <Coverflow\n                //                     style={{ width: 300 + 'px' }}\n                //                     imagesArr={imagesArr}\n                //                     labelsArr={labelsArr}\n                //                     handleSelect={index => this.getSelectedBoxer(index)}\n                //                 />\n                //             </div>\n                //             <h1>{boxerRingname}</h1>\n                //             <div className=\"boxer-info\">\n                //                 <<div className=\"boxer-profile\">\n                //                     <<divt basic>\n                //                         <h3>Upcoming Fight: </h3>\n                //                         <h3>Wins - {wins}</h3>\n                //                         <h3>Losses - {losses}</h3>\n                //                         <h3>Draws - {draws}</h3>\n                //                         <h3>KO's - {kos}</h3>\n                //                         <h3>Gym - {boxerGym}</h3>\n                //                         <h3>\n                //                             {boxerCity}, {boxerState}\n                //                         </h3>\n                //                         <h3>\n                //                             <a\n                //                                 href={boxerTwitter}\n                //                                 target=\"_blank\"\n                //                                 rel=\"noopener noreferrer\">\n                //                                 <Button color=\"twitter\">\n                //                                     <Icon name=\"twitter\" /> Twitter\n                //                                 </Button>\n                //                             </a>\n                //                         </h3>\n                //                         <h3>\n                //                             <a\n                //                                 href=\"youtube.com\"\n                //                                 target=\"_blank\"\n                //                                 rel=\"noopener noreferrer\">\n                //                                 <Button color=\"youtube\">\n                //                                     <Icon name=\"youtube\" /> YouTube\n                //                                 </Button>\n                //                             </a>\n                //                         </h3>\n                //                         <h3>\n                //                             <a\n                //                                 href={boxerFacebook}\n                //                                 target=\"_blank\"\n                //                                 rel=\"noopener noreferrer\">\n                //                                 <Button color=\"facebook\">\n                //                                     <Icon name=\"facebook\" /> Facebook\n                //                                 </Button>\n                //                             </a>\n                //                         </h3>\n                //                         <h3>\n                //                             <a\n                //                                 href={boxerInstagram}\n                //                                 target=\"_blank\"\n                //                                 rel=\"noopener noreferrer\">\n                //                                 <Button color=\"instagram\">\n                //                                     <Icon name=\"instagram\" /> Instagram\n                //                                 </Button>\n                //                             </a>\n                //                         </h3>\n                //                     </<divt>\n                //                 </<div>\n                //                 <<div>\n                //                     <<divt basic>\n                //                         <div className=\"twitter-timeline\">\n                //                             <TwitterShareButton\n                //                                 url={boxerTwitter}\n                //                                 options={twitterOptions}\n                //                             />\n                //                             <TwitterTimelineEmbed\n                //                                 sourceType=\"profile\"\n                //                                 screenName=\"fightcloudlive\"\n                //                                 // options={{height: 400}}\n                //                             />\n                //                         </div>\n                //                     </<divt>\n                //                 </<div>\n                //                 <<div>\n                //                     <<divt basic>\n                //                         <h2> Images and Videos</h2>\n                //                         <div>\n                //                             <S3Album level=\"public\" path={albumPath} />\n                //                         </div>\n                //                     </<divt>\n                //                 </<div>\n                //             </<div>\n                //         </div>\n                //     </>\n\t\t\t\t// )}\n\t\t);\n\n}\nexport default Boxers;\n","/Users/andrewkroll/Documents/Projects/f2/src/helpers.js",["179"],"import {Auth} from 'aws-amplify'\n\nexport const slicedGame = (str) => {\n    let index = str.indexOf('-');\n    if(index > -1){\n        return str.slice(0,index);\n    } else {\n        return str;\n    }\n};\n\nexport const getGameType = (path) => {\n    if(path.includes('poll')) return 'poll';\n    if(path.includes('quiz')) return 'quiz';\n    if(path.includes('predictive')) return 'predictive';\n};\n\nexport const createMarkup = text => ({ __html: text });\n\nexport const shortenTitle = (title) => {\n    if (title && title.length > 100){\n        title = title.slice(0,100);\n        title += '...';\n        return title;\n    }\n    return title;\n};\n\nexport const shortenBody = (body) => {\n    if(body.length > 200){\n        body = body.slice(0,200);\n        body += '...';\n        return body;\n    }\n    return body += '...';\n};\n\nexport const signOut = async () => (\n    Auth.signOut()\n        .then(\n            sessionStorage.setItem('isLoggedIn', false),\n            this.setState(() => {\n                return {\n                    logOut: true\n                }\n            })\n        )\n        .catch(err => console.error(err))\n);\n\nexport const makeComparator = (key, order='asc') => {\n    return (a, b) => {\n        if(!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) return 0;\n\n        const aVal = (typeof a[key] === 'string') ? a[key].toUpperCase() : a[key];\n        const bVal = (typeof b[key] === 'string') ? b[key].toUpperCase() : b[key];\n\n        let comparison = 0;\n        if (aVal > bVal) comparison = 1;\n        if (aVal < bVal) comparison = -1;\n\n        return order === 'desc' ? (comparison * -1) : comparison\n    };\n};\n\nexport const getSelectedBoxer = async (index,boxers) => {\n    let boxer, rand;\n    boxer = index === null ? rand : index;\n    rand = Math.floor(Math.random() * boxer.length);\n    this.setState({ selectedBoxer: boxers[boxer] });\n};\n\nexport const makeLabelsArr = (boxers) => {\n    let arr = [];\n    boxers.map(boxer => {\n    arr.push(\n        boxer.firstName + ' \"' + boxer.ringName + '\" ' + boxer.lastName\n    )});\n    return arr;\n};\n\nexport const makeImagesArr = (boxer) => {\n    let arr = [];\n    let url = boxer.profileImg;\n    arr.push(url);\n    return arr;\n};\n\nexport const makeUrl = (title) => {\n    let regex = / /gi;\n    let makeUrl = title.replace(regex,'-');\n    let url = '/article/' + makeUrl;\n    return url;\n};\n","/Users/andrewkroll/Documents/Projects/f2/src/pages/not-found.js",[],"/Users/andrewkroll/Documents/Projects/f2/src/components/player-components/player.js",["180","181","182","183","184","185","186","187","188","189","190","191"],"import React, {useEffect, useRef, useState} from 'react';\nimport {\n    create,\n    isPlayerSupported,\n    MediaPlayer,\n    PlayerError,\n    PlayerEventType,\n    PlayerState,\n    Quality,\n    TextCue,\n    TextMetadataCue,\n} from 'amazon-ivs-player';\nimport {PlayerWrapperPlayer, QuestionText} from '../../css/live';\n\nconst Player = ({startBroadcast, setStartBroadcast, setStartTimer, setButtonsDisabled, setQuestion}) => {\n\n    const videoSrc = 'https://player.live-video.net/1.0.0/amazon-ivs-player.min.js';\n    const stream = \"https://fcc3ddae59ed.us-west-2.playback.live-video.net/api/video/v1/us-west-2.893648527354.channel.xhP3ExfcX8ON.m3u8\";\n    // const stream = 'https://31c84084a50b.us-east-1.playback.live-video.net/api/video/v1/us-east-1.896748474789.channel.INm8ucGR84N2.m3u8';\n    const divEl = useRef(null);\n    const videoEl = useRef(null);\n    const [streamUrl, setStreamUrl] = useState(stream);\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = videoSrc;\n        script.async = true;\n        document.body.appendChild(script);\n        script.onload = () => {\n            // eslint-disable-next-line no-undef\n            if (IVSPlayer.isPlayerSupported) {\n                // eslint-disable-next-line no-undef\n                const player = IVSPlayer.create();\n                // eslint-disable-next-line no-undef\n                player.attachHTMLVideoElement(document.getElementById('video-player'));\n                player.addEventListener(\"PlayerTextMetadataCue\", (cue) => {\n                    let q = JSON.parse(cue.text);\n                    // console.log('CUE: ', q);\n                    //question, answers[] and correctIndex\n\n                    if(q && q.question && q.question.length > 0){\n                        let {question, answers, correctIndex} = q;\n                        let obj = {\n                            question,\n                            answersArray: answers,\n                            answerIndex: correctIndex,\n                            questionId: '1234-5678-910'\n                        }\n                        setStartBroadcast(true);\n                        setQuestion(obj);\n                        setStartTimer(true);\n                        setButtonsDisabled(false);\n                        return;\n                    } else {\n                        // const event = PlayerEventType;\n                        let nextQuestion = JSON.parse(cue.text);\n                        setQuestion(nextQuestion);\n                        setStartTimer(true);\n                        setButtonsDisabled(false);\n                    }\n                    // console.log('latency: ',player.getLiveLatency());\n                });\n                player.addEventListener(\"Playing\", (data) => {\n                    if(!!startBroadcast){\n                        setStartBroadcast(true);\n                    }\n                })\n                // player.addEventListener(\"PlayerError\", (cue) => {\n                    // console.log('player error: ',cue);\n                // });\n                player.load(streamUrl);\n                player.play();\n            }\n        }\n        return () => {\n            document.body.removeChild(script);\n        }\n    },[])\n\n    const getDeviceWidth = (width) => {\n        if(width > 768) return 350;\n        if(width > 605) return 300;\n        if(width >= 550) return 275;\n        if(width >= 500) return 250;\n        if(width >= 480) return 240;\n        if(width >= 435) return 220;\n        if(width >= 425) return 210;\n        if(width >= 400) return 200;\n        if(width < 400) return 180;\n    };\n    return (\n        <PlayerWrapperPlayer ref={divEl}>\n            <video\n                id=\"video-player\"\n                ref={videoEl}\n                playsInline\n                autoPlay\n                height={getDeviceWidth(window.innerWidth)}\n                controls\n            />\n        </PlayerWrapperPlayer>\n    )\n\n}\nexport default Player;","/Users/andrewkroll/Documents/Projects/f2/src/css/live.js",["192"],"import styled from '@emotion/styled'\nimport {Link} from 'react-router-dom'\n\nexport const ChatButton = styled.button`\n    font-weight: bold;\n    margin-top: 0.3rem;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 10px;\n    width: 40%;\n    font-size: 0.8rem;\n    height: 1.5rem;\n    text-decoration: none;\n    background: #d22509;\n    color: #FFF;\n    &:hover {\n        cursor: pointer;\n        background: #ff2805;\n        -webkit-transition: background 0.2s ease-in-out;\n        -moz-transition: background 0.2s ease-in-out;\n        transition: background-color 0.2s ease-in-out;\n        color: #FFF;\n      }\n`\nexport const ChatForm = styled.form`\n    width: 90%;\n`;\nexport const ChatInput = styled.input`\n    width: 100%;\n    border: 1px solid #ccc;\n    background: #FFF;\n    margin: 0 0 5px;\n    margin-bottom: 1rem;\n    padding: 10px;\n    placeholder {\n    color: #888;\n}\n`;\nexport const LiveWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: nowrap;\n    position: relative;\n`;\nexport const LiveSection = styled.section`\n    width: 60%;\n    height: 100%;\n`;\nexport const LiveAside = styled.aside`\n    width: 20%;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: center;\n    padding: 1rem;\n`;\nexport const PlayerWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    margin: 5px auto;\n    text-align: center;\n    height: 300px;\n`;\nexport const PlayerWrapperPlayer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\nexport const VideoOverlayDiv = styled.div`\n    margin: 0.5rem auto;\n    min-height: 2rem;\n    border-radius: 10px;\n    width: 50%;\n`;\nexport const VideoOverlayText = styled.h1`\n  position: relative;\n  z-index: 11000;\n  color: #c13c43;\n  padding: 0.5rem;\n  text-align: center;\n  margin: 0rem auto;\n  font-size: 2rem;\n//   text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;\n  @media(max-width: 768px){\n    font-size: 2rem;\n  }\n  @media(max-width: 500px){\n\n  }\n  @media(max-width: 450px){\n    width: 100%;\n    font-size: 1.7rem;\n  }\n  @media(max-width: 425px){\n    font-size: 1.5rem;\n  }\n`;\nexport const TimerDiv = styled.div`\n    color: #FFF;\n    width: 30%; \n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding: 0rem 1rem;\n    margin: 0.5rem auto;\n    // margin-bottom: -5rem;\n`;\nexport const TimerText = styled.h2`\n  color: #333;\n  margin: 0;\n  padding: 0.5rem;\n`;\nexport const ScoreAndTimerDiv = styled.div`\n  margin: 0rem auto;\n  width: 50%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n`;\nexport const GameText = styled.h1`\n  width: 100%;\n  text-align: center;\n  margin: 0rem auto;\n`;\nexport const Button = styled.button`\n  font-weight: ${props => props.buttonsDisabled ? `400` : `600`};\n  border-radius: 3px; \n  cursor: ${props => props.buttonsDisabled ? 'unset' : 'pointer'};\n  width: ${props => props.width === 4 ? `20%` : `28%`};\n  border: ${props => props.buttonsDisabled ? `#950451` : `1px solid #FFF`};\n  background: ${props => props.buttonsDisabled ? `#85787f` :`#c13c43`};\n  color: #FFF;\n  margin-right: ${props => props.width === 4 ? `0.5rem` : `0.8rem`};\n  &:last-child{\n    margin-right: 0px;\n  } \n  margin-bottom: 1rem;\n  padding: 10px;\n  font-size: 14px;\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.5);\n  &:hover {\n    background: #d60000;\n    -webkit-transition: background 0.1s ease-in-out;\n    -moz-transition: background 0.1s ease-in-out;\n    transition: background-color 0.1s ease-in-out;\n  }\n  @media(max-width: 768px){\n    width: ${props => props.width === 4 ? `35%` : `28%`};\n  }\n`;\nexport const PageBreak = styled.div`\n  width: 90%;\n  margin: 0.5rem auto;\n  margin-top: 2.5rem;\n  border-top: 3px solid #c13c43;\n  @media(max-width: 767px){\n      margin-top: 1rem;\n  }\n`;\nexport const AnswersWrapper = styled.div`\n  position: absolute;\n  top: 30%;\n  z-index: 1000;\n  pointer-events: ${props => props.buttonsDisabled ? `none` : `auto`};\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  left: 0;\n  right: 0;\n  text-align: center;\n  bottom: 3.2rem;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  @media(max-width: 767px){\n    width: 90%;\n    top: 30%;\n  }\n  @media(max-width: 550px){\n    top: 20%;\n  }\n  @media(max-width: 500px){\n    top: 20%;\n  }\n  @media(max-width: 425px){\n    top: 15%;\n  }\n`;\nexport const TableWrapper = styled.div`\n  border: 1px solid gray;\n  border-radius: 2px;\n  margin-bottom: 3rem;\n`;\nexport const Row = styled.div`\n  border: 1px solid #ccc;\n  border-radius: 2px;\n  padding: 10px;\n  height: 2rem;\n  width: 100%;\n  resize: none;\n  :nth-of-type(odd){\n    background: #DADADA;\n  }\n  :nth-of-type(even){\n    background: #ededed;\n  }\n  placeholder {\n    color: #888;\n  }\n  &:hover {\n    background: #FFF;\n    cursor: pointer;\n  }\n  `;\nexport const TableText = styled.h2`\n  color: #222;\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 0;\n`;\nexport const LeaderboardWrapper = styled.div`\n  margin-bottom: 7rem;\n  text-align: center;\n`;\nexport const LeaderboardUl = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n`;\nexport const Li = styled.li`\n\n`;\nexport const ButtonWrapper = styled.div`\n  margin: 1.5rem auto;\n  position: absolute;\n  top: 50%;\n  width: 100%;\n  @media(min-width: 768px){\n    margin: 3rem auto;\n  }\n`;\nexport const QuestionText = styled.h2`\n  width: 80%;\n  background: rgba(0,0,0,0.4);\n  border-radius: 5px;\n  color: #FFF;\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 600;\n  padding: 0.5rem;\n  margin: 1rem auto;\n  margin-top: 1.5rem;\n  top:0;\n  @media(max-width: 768px){\n    font-size: 1rem;\n    top: 15%;\n    width: 90%;\n  }\n`;\nexport const Text = styled.h2`\n  text-align: center;\n  font-size: 1.5rem;\n  font-weight: 600;\n  padding: 0.5rem;\n  margin: 0;\n`;\n","/Users/andrewkroll/Documents/Projects/f2/src/components/player-components/timer.js",["193","194","195"],"import React, {useState,useEffect} from 'react'\nimport {TimerText} from '../../css/live'\n\nconst Timer = ({gameType,counter, setCounter,setStartTimer, startTimer, setShowScore, showScore, setButtonsDisabled}) => {\n\n    useEffect(() => {\n        if(startTimer){\n            var timers;\n            if(gameType === 'quiz'){\n                timers =\n                counter > 0 && setInterval(() => setCounter(counter-1), 50);\n            } else {\n                timers =\n                counter > 0 && setInterval(() => setCounter(counter-1), 1000);\n            }\n            return () => {\n                clearInterval(timers);\n            }\n        }\n    }, [counter,startTimer]);  \n\n    if(counter == 0){\n        setButtonsDisabled(true);\n        setStartTimer(false);\n        setShowScore(false);\n        setCounter(100);\n    } \n    return (\n        <div style={{display: 'inline-flex'}}>\n            <TimerText>Timer:</TimerText>\n            <TimerText id=\"timer\">{counter}</TimerText>\n        </div>\n    )\n};\n\nexport default Timer;","/Users/andrewkroll/Documents/Projects/f2/src/components/video-thumbs.js",["196","197","198"],"import React from 'react';\nimport {VideoPublisher,VideoTitle,VideoDescription,VideoContainer,VideoImg,VideoWrapper, VideoLink} from '../css/home';\nimport {shortenTitle} from '../helpers'\n\nconst VideoThumbs = ({videos}) => { \n    return videos.map((video,i) => {\n        let {contentUrl,creator,datePublished,description,publisher,name,thumbnailUrl} = video;\n        return(\n            <VideoContainer key={i}>\n                <VideoLink href={contentUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    <VideoImg src={thumbnailUrl}/>\n                    <VideoTitle>{name}</VideoTitle>\n                    <VideoDescription>{shortenTitle(description)}</VideoDescription>\n                    <VideoPublisher>{publisher[0].name}</VideoPublisher>\n                </VideoLink>\n            </VideoContainer>\n        )\n    })\n};\nexport default VideoThumbs","/Users/andrewkroll/Documents/Projects/f2/src/components/chat.js",["199"],"import React from 'react'\nimport { ChatFeed, Message } from 'react-chat-ui'\n\nconst Chat = ({chatMessages, isTyping}) => {\n    return (\n        <ChatFeed\n            messages={chatMessages} // Array: list of message objects\n            isTyping={isTyping} \n            hasInputField={false} \n            showSenderName \n            bubblesCentered={false} \n            bubbleStyles={\n                {\n                    text: {\n                        fontSize: '0.7rem',\n                        color: '#333'\n                    },\n                    chatbubble: {\n                        borderRadius: '10px',\n                        padding: '0.5rem',\n                        marginBottom:'5px'\n                    }\n                }\n            }\n        />\n    )\n}\nexport default Chat","/Users/andrewkroll/Documents/Projects/f2/src/pages/dashboard.js",["200","201","202","203","204","205","206","207","208","209","210","211","212","213"],"import React, {useState,useEffect} from 'react';\nimport Amplify, {\n    Auth,\n\tAnalytics,\n\tStorage,\n\tAPI,\n\tgraphqlOperation\n} from 'aws-amplify';\nimport {\n    Authenticator,\n\twithAuthenticator,\n\tPhotoPicker,\n\tS3Image\n} from '@aws-amplify/ui-react';\n// import { loader } from '../../Components/PageComponents/loader';\nimport Editor from '../components/utilities/editor'\nimport Select from 'react-select';\nimport {SelectWrapper,Heading} from '../css/core'\n// import * as Query from '../../graphql/queries';\n// import * as Mutation from '../../graphql/mutations';\n// import Media from '../Media';\n// import Editor from '../../Utilities/Editor';\n// import Forms from '../../Components/Forms';\n// import Boxer from '../../Components/Images/boxer.jpg';\n// import { Button, Form, Image, Divider, Transition } from 'semantic-ui-react';\n\n// const federated = {\n// \tfacebook_app_id: '1901082616641766'\n// };\n\nconst Dashboard = () => {\n    const [loading, setLoading] = useState(false);\n    const [user, setUser] = useState({});\n    const [selectValue, setSelectValue] = useState({\n        value: '',\n        label: 'Select...',\n        type:''\n    });\n\n    useEffect(() => {\n        let getUser = async () => {\n            await Auth.currentAuthenticatedUser()\n                .then(user => setUser(user))\n                .catch(err => console.log(err))\n        };\n        // getUser();\n    },[]);\n    let options = [\n        { value: 'ARTICLE', label: 'Publish an Article', type: 'Article' },\n        { value: 'BOXER', label: 'Create a Boxer Profile', type: 'Boxer' },\n        { value: 'GYM', label: 'Create a Gym Profile', type: 'Gym' },\n        {\n            value: 'PODCAST',\n            label: 'Live Stream video or audio podcast',\n            type: 'Livestream'\n        },\n        { value: 'SHOW', label: 'Post a Show', type: 'Show' }\n        // {value: \"USER\",label:\"Your Profile Info\",type: \"User\" },\n    ];\n    const onSelectChange = selectObj => {\n        let { value } = selectObj;\n        // console.log('change: ',value);\n        setSelectValue(selectObj);\n\t\t// this.handleSelectedForm(value);\n\t\t// let { userSub } = this.state;\n\t\t// this.getClientImages(userSub, value);\n\t\t// this.setState(state => ({ userTypeSelectOption: value, loading: true }));\n\t\t// if (value == 'PODCAST') {\n\t\t// \tthis.setState({ loading: false });\n        // }\n    \n    };\n\n    return (\n        <>\n            <Heading variant='h3' style={{margin: '1rem auto',fontWeight: 'bold'}}>Dashboard</Heading>\n            <SelectWrapper>\n                <Select\n                    onChange={onSelectChange}\n                    value={selectValue}\n                    options={options}\n                />\n            </SelectWrapper>\n            <Editor />\n        </>\n    )\n}\nexport default Dashboard;\n// class Dashboard extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.getUser = this.getUser.bind(this);\n// \t\tthis.handleDashboardPutForms = this.handleDashboardPutForms.bind(this);\n// \t\tthis.handleProfilePicSelect = this.handleProfilePicSelect.bind(this);\n// \t\tthis.getClientImages = this.getClientImages.bind(this);\n// \t\tthis.handlePicSelect = this.handlePicSelect.bind(this);\n// \t}\n// \tstate = {\n// \t\tpercentLoaded: null,\n// \t\tactiveIndex: null,\n// \t\tid: '',\n// \t\tuserSub: null,\n// \t\taccountType: '',\n// \t\tuserTypeSelectOption: '',\n// \t\tsetProfilePic: true,\n// \t\ts3Images: [],\n// \t\tloading: true,\n// \t\tusername: '',\n// \t\tfile: {},\n// \t\tuploadingImg: '',\n// \t\tuser: {\n// \t\t\tuserEmail: '',\n// \t\t\tuserDisplayName: '',\n// \t\t\tuserFirstName: '',\n// \t\t\tuserLastName: '',\n// \t\t\tuserProfilePic: '',\n// \t\t\tuserProfilePath: '',\n// \t\t\treminders: [],\n// \t\t\tfollowing: [],\n// \t\t\tfollowers: []\n// \t\t},\n// \t\tusers: [],\n// \t\tarticles: [],\n// \t\tboxer: {\n// \t\t\tboxers: [],\n// \t\t\tid: '',\n// \t\t\tuserSub: '',\n// \t\t\tusername: '',\n// \t\t\tboxerFirstName: '',\n// \t\t\tboxerLastName: '',\n// \t\t\tboxerRingname: '',\n// \t\t\tboxerGym: '',\n// \t\t\tboxerTrainer: '',\n// \t\t\tboxerCity: '',\n// \t\t\tboxerState: '',\n// \t\t\twins: '',\n// \t\t\tlosses: '',\n// \t\t\tdraws: '',\n// \t\t\tkos: '',\n// \t\t\tboxerEmail: '',\n// \t\t\tboxerUrl: '',\n// \t\t\tboxerDescription: '',\n// \t\t\tboxerFacebook: '',\n// \t\t\tboxerInstagram: '',\n// \t\t\tboxerTwitter: '',\n// \t\t\tboxerNextFight: '',\n// \t\t\tboxerProfilePic: 'empty'\n// \t\t},\n// \t\tshow: {\n// \t\t\tshows: [],\n// \t\t\tid: '',\n// \t\t\tuserSub: '',\n// \t\t\tusername: '',\n// \t\t\tshowTitle: '',\n// \t\t\tshowVenue: '',\n// \t\t\tshowCity: '',\n// \t\t\tshowState: '',\n// \t\t\tshowNetwork: '',\n// \t\t\tshowPromoter: '',\n// \t\t\tshowDescription: '',\n// \t\t\tshowNotes: '',\n// \t\t\tshowUrl: '',\n// \t\t\tshowDate: '',\n// \t\t\tshowContact: '',\n// \t\t\tshowTwitter: '',\n// \t\t\tshowFacebook: '',\n// \t\t\tshowInstagram: '',\n// \t\t\tshowProfilePic: ''\n// \t\t},\n// \t\tgym: {\n// \t\t\tid: '',\n// \t\t\tgyms: [],\n// \t\t\tgymName: '',\n// \t\t\tgymContactFirstName: '',\n// \t\t\tgymContactLastName: '',\n// \t\t\tgymStreet: '',\n// \t\t\tgymCity: '',\n// \t\t\tgymState: '',\n// \t\t\tgymZip: '',\n// \t\t\tgymDescription: '',\n// \t\t\tgymUrl: '',\n// \t\t\tgymEmail: '',\n// \t\t\tgymTel: '',\n// \t\t\tgymFacebook: '',\n// \t\t\tgymTwitter: '',\n// \t\t\tgymInstagram: '',\n// \t\t\tgymProfilePic: ''\n// \t\t}\n// \t};\n\n// \tasync componentDidMount() {\n// \t\tawait Auth.currentAuthenticatedUser()\n// \t\t\t.then(user => {\n// \t\t\t\tlet { username } = user;\n// \t\t\t\tlet userSub = user.attributes.sub;\n// \t\t\t\tthis.setState(state => ({\n// \t\t\t\t\tusername,\n// \t\t\t\t\tuserSub,\n// \t\t\t\t\tloading: false\n// \t\t\t\t}));\n// \t\t\t})\n// \t\t\t.then(userSub => this.getUser(userSub))\n// \t\t\t.then(() => {\n// \t\t\t\tlet { accountType, userSub } = this.state;\n// \t\t\t\tthis.getClientImages(userSub, accountType);\n// \t\t\t})\n// \t\t\t.catch(err => console.error(err));\n// \t}\n\n// \tgetUser = async userSub => {\n// \t\tawait API.graphql(\n// \t\t\tgraphqlOperation(Query.listUsers, { userSub: { userSub } })\n// \t\t)\n// \t\t\t.then(currentUser => {\n// \t\t\t\tlet {\n// \t\t\t\t\tuserProfilePic,\n// \t\t\t\t\tuserEmail,\n// \t\t\t\t\taccountType,\n// \t\t\t\t\tid,\n// \t\t\t\t\tuserFirstName,\n// \t\t\t\t\tuserLastName,\n// \t\t\t\t\tfollowing,\n// \t\t\t\t\tfollowers,\n// \t\t\t\t\treminders\n// \t\t\t\t} = currentUser.data.listUsers.items[0];\n// \t\t\t\tlet userDisplayName = userFirstName + ' ' + userLastName;\n\n// \t\t\t\tthis.setState(state => ({\n// \t\t\t\t\tuserProfilePic,\n// \t\t\t\t\taccountType,\n// \t\t\t\t\tid,\n// \t\t\t\t\tuser: {\n// \t\t\t\t\t\tid,\n// \t\t\t\t\t\tuserFirstName,\n// \t\t\t\t\t\tuserLastName,\n// \t\t\t\t\t\tuserDisplayName,\n// \t\t\t\t\t\tuserEmail,\n// \t\t\t\t\t\tfollowing,\n// \t\t\t\t\t\tfollowers,\n// \t\t\t\t\t\treminders\n// \t\t\t\t\t}\n// \t\t\t\t}));\n// \t\t\t})\n// \t\t\t.catch(err => console.error(err));\n// \t};\n\n// \thandleDashboardPutForms = async (values, type) => {\n// \t\tswitch (type) {\n// \t\t\tcase 'BOXER':\n// \t\t\t\t// console.log('values: ',values);\n// \t\t\t\tawait API.graphql(\n// \t\t\t\t\tgraphqlOperation(Mutation.updateBoxer, { input: values })\n// \t\t\t\t)\n// \t\t\t\t\t.then(createdBoxer => {\n// \t\t\t\t\t\tlet boxer = { ...createdBoxer };\n// \t\t\t\t\t\tthis.setState({ boxer });\n// \t\t\t\t\t})\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'GYM':\n// \t\t\t\tawait API.graphql(\n// \t\t\t\t\tgraphqlOperation(Mutation.updateGym, { input: values })\n// \t\t\t\t)\n// \t\t\t\t\t.then(updatedGym => {\n// \t\t\t\t\t\tlet gym = { ...updatedGym };\n// \t\t\t\t\t\tthis.setState({ gym });\n// \t\t\t\t\t})\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'PODCAST':\n// \t\t\t\tthis.setState({ loading: false });\n// \t\t\t\tbreak;\n// \t\t\tcase 'PROMOTER':\n// \t\t\t\tbreak;\n// \t\t\tcase 'SHOW':\n// \t\t\t\tawait API.graphql(\n// \t\t\t\t\tgraphqlOperation(Mutation.updateShow, { input: values })\n// \t\t\t\t)\n// \t\t\t\t\t.then(updatedShow => {\n// \t\t\t\t\t\tlet show = { ...updatedShow };\n// \t\t\t\t\t\tthis.setState({ show });\n// \t\t\t\t\t})\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'TRAINER':\n// \t\t\t\tbreak;\n// \t\t\t// case 'USER':\n// \t\t\t// console.log('user values: ', values);\n// \t\t\t// await API.graphql(\n// \t\t\t// \tgraphqlOperation(Mutation.updateUser, { input: values })\n// \t\t\t// )\n// \t\t\t// \t.then(updatedUser => {\n// \t\t\t// \t\tlet user = { ...updatedUser };\n// \t\t\t// \t\tthis.setState({ user });\n// \t\t\t// \t})\n// \t\t\t// \t.catch(err => console.error(err));\n// \t\t\t// break;\n// \t\t\tdefault:\n// \t\t\t\tconsole.error('bad case in handleDashboardPutForms.');\n// \t\t\t\treturn;\n// \t\t}\n// \t};\n\n\n\n// \thandleSelectedForm = async formType => {\n// \t\tlet { userSub } = this.state;\n// \t\tswitch (formType) {\n// \t\t\tcase 'ARTICLE':\n// \t\t\t\tawait API.graphql(\n// \t\t\t\t\tgraphqlOperation(Query.listArticles, { userSub: { userSub } })\n// \t\t\t\t)\n// \t\t\t\t\t.then(articleData => {\n// \t\t\t\t\t\tlet articles = articleData.data.listArticles.items;\n// \t\t\t\t\t\tthis.setState(state => ({\n// \t\t\t\t\t\t\tarticles,\n// \t\t\t\t\t\t\taccountType: formType,\n// \t\t\t\t\t\t\tloading: false\n// \t\t\t\t\t\t}));\n// \t\t\t\t\t})\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'BOXER':\n// \t\t\t\tawait API.graphql(\n// \t\t\t\t\tgraphqlOperation(Query.listBoxers, { userSub: { userSub } })\n// \t\t\t\t)\n// \t\t\t\t\t.then(boxerData => {\n// \t\t\t\t\t\tlet boxer = { ...boxerData.data.listBoxers.items[0] };\n// \t\t\t\t\t\tlet { boxerProfilePic } = boxer;\n// \t\t\t\t\t\tthis.setState(state => ({\n// \t\t\t\t\t\t\tboxer,\n// \t\t\t\t\t\t\tuserProfilePic: boxerProfilePic,\n// \t\t\t\t\t\t\taccountType: formType,\n// \t\t\t\t\t\t\tloading: false\n// \t\t\t\t\t\t}));\n// \t\t\t\t\t})\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'GYM':\n// \t\t\t\tawait API.graphql(\n// \t\t\t\t\tgraphqlOperation(Query.listGyms, { userSub: { userSub } })\n// \t\t\t\t)\n// \t\t\t\t\t.then(gymData => {\n// \t\t\t\t\t\tlet gym = { ...gymData.data.listGyms.items[0] };\n// \t\t\t\t\t\tlet { gymProfilePic } = gym;\n// \t\t\t\t\t\tthis.setState(state => ({\n// \t\t\t\t\t\t\tgym,\n// \t\t\t\t\t\t\tuserProfilePic: gymProfilePic,\n// \t\t\t\t\t\t\taccountType: formType,\n// \t\t\t\t\t\t\tloading: false\n// \t\t\t\t\t\t}));\n// \t\t\t\t\t})\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'PODCAST':\n// \t\t\t\tthis.setState({ loading: false });\n// \t\t\t\t// await API.graphql(graphqlOperation(Query.listPodcasts, {userSub:{userSub}}))\n// \t\t\t\t// .then(podcastData => {\n// \t\t\t\t//     let podcast = {...podcastData.data.listPodcasts.items[0]};\n// \t\t\t\t//     this.setState({ podcast, accountType:formType, loading:false });\n// \t\t\t\t// })\n// \t\t\t\t// .catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'SHOW':\n// \t\t\t\tawait API.graphql(\n// \t\t\t\t\tgraphqlOperation(Query.listShows, { userSub: { userSub } })\n// \t\t\t\t)\n// \t\t\t\t\t.then(showData => {\n// \t\t\t\t\t\tlet show = { ...showData.data.listShows.items[0] };\n// \t\t\t\t\t\tlet { showProfilePic } = show;\n// \t\t\t\t\t\tthis.setState(state => ({\n// \t\t\t\t\t\t\tshow,\n// \t\t\t\t\t\t\tuserProfilePic: showProfilePic,\n// \t\t\t\t\t\t\taccountType: formType,\n// \t\t\t\t\t\t\tloading: false\n// \t\t\t\t\t\t}));\n// \t\t\t\t\t})\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tdefault:\n// \t\t\t\tconsole.error('incorrect form');\n// \t\t\t\treturn;\n// \t\t}\n// \t};\n\n// \tuploadMediaToS3 = async (e, imageType) => {\n// \t\tlet { userSub, accountType } = this.state;\n// \t\tlet file = e.target.files[0];\n// \t\tlet { name } = file;\n// \t\tlet imagePath = 'public/' + accountType + '/' + userSub + '/';\n// \t\tawait Storage.put(name, file, {\n// \t\t\tcustomPrefix: { public: imagePath },\n// \t\t\tmetadata: { albumid: '9ab68365-e58e-4287-8a11-4fda43ea25aa' },\n// \t\t\tprogressCallback(progress) {\n// \t\t\t\tlet percentLoaded = 100 * (progress.loaded / progress.total).toFixed(2);\n// \t\t\t\tconsole.log('Loaded: ', `${percentLoaded}`);\n// \t\t\t\tthis.setState(() => ({ percentLoaded }));\n// \t\t\t}\n// \t\t}).catch(err => console.error(err));\n\n// \t\tif (imageType === 'profile') {\n// \t\t\tswitch (accountType) {\n// \t\t\t\tcase 'USER':\n// \t\t\t\t\tlet userId = this.state.id;\n// \t\t\t\t\tlet userProfilePic = 'USER' + '/' + userSub + '/' + name;\n// \t\t\t\t\tawait API.graphql(\n// \t\t\t\t\t\tgraphqlOperation(Mutation.updateUser, {\n// \t\t\t\t\t\t\tinput: { id: userId, userProfilePic }\n// \t\t\t\t\t\t})\n// \t\t\t\t\t)\n// \t\t\t\t\t\t.then(updatedUser => {\n// \t\t\t\t\t\t\tlet { userProfilePic } = { ...updatedUser.data.updateUser };\n// \t\t\t\t\t\t\tthis.setState(state => ({ userProfilePic }));\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'BOXER':\n// \t\t\t\t\tlet boxerId = this.state.boxer.id;\n// \t\t\t\t\tlet boxerProfilePic = accountType + '/' + userSub + '/' + name;\n// \t\t\t\t\tawait API.graphql(\n// \t\t\t\t\t\tgraphqlOperation(Mutation.updateBoxer, {\n// \t\t\t\t\t\t\tinput: { id: boxerId, boxerProfilePic }\n// \t\t\t\t\t\t})\n// \t\t\t\t\t)\n// \t\t\t\t\t\t.then(updatedBoxer => {\n// \t\t\t\t\t\t\tlet { boxerProfilePic } = { ...updatedBoxer.data.updateBoxer };\n// \t\t\t\t\t\t\tthis.setState(state => ({ userProfilePic: boxerProfilePic }));\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'GYM':\n// \t\t\t\t\tlet gymId = this.state.gym.id;\n// \t\t\t\t\tlet gymProfilePic = accountType + '/' + userSub + '/' + name;\n// \t\t\t\t\tawait API.graphql(\n// \t\t\t\t\t\tgraphqlOperation(Mutation.updateGym, {\n// \t\t\t\t\t\t\tinput: { id: gymId, gymProfilePic }\n// \t\t\t\t\t\t})\n// \t\t\t\t\t)\n// \t\t\t\t\t\t.then(updatedGym => {\n// \t\t\t\t\t\t\tlet { gymProfilePic } = { ...updatedGym.data.updateGym };\n// \t\t\t\t\t\t\tthis.setState(state => ({ userProfilePic: gymProfilePic }));\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\t\tbreak;\n// \t\t\t\tcase 'SHOW':\n// \t\t\t\t\tlet showId = this.state.show.id;\n// \t\t\t\t\tlet showProfilePic = accountType + '/' + userSub + '/' + name;\n// \t\t\t\t\tawait API.graphql(\n// \t\t\t\t\t\tgraphqlOperation(Mutation.updateShow, {\n// \t\t\t\t\t\t\tinput: { id: showId, showProfilePic }\n// \t\t\t\t\t\t})\n// \t\t\t\t\t)\n// \t\t\t\t\t\t.then(updatedShow => {\n// \t\t\t\t\t\t\tlet { showProfilePic } = { ...updatedShow.data.updateShow };\n// \t\t\t\t\t\t\tconsole.log('showProfielPic: ', showProfilePic);\n// \t\t\t\t\t\t\tthis.setState(state => ({ userProfilePic: showProfilePic }));\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\t\tbreak;\n// \t\t\t\tdefault:\n// \t\t\t\t\tconsole.log('image error');\n// \t\t\t\t\treturn;\n// \t\t\t}\n// \t\t}\n// \t};\n// \t//url for profileImg. 'https://s3.amazonaws.com/boxers/public/USER/0d88ebda-6fe1-42c6-ae54-4584cc8b7cc1/pexels-1181413.jpg';\n\n// \tgetClientImages = async (userSub, accountType) => {\n// \t\tlet imagesPath = accountType + '/' + userSub + '/';\n// \t\tawait Storage.list(imagesPath)\n// \t\t\t.then(s3Images => this.setState(state => ({ s3Images })))\n// \t\t\t.catch(err => console.log(err));\n// \t};\n\n// \tsetProfileImg = async (path, id) => {\n// \t\tawait API.graphql(graphqlOperation(Mutation.updateUser, { input: { id } }))\n// \t\t\t.then(updatedUser => this.setState({ userProfileImg: path }))\n// \t\t\t.catch(err => console.error(err));\n// \t};\n\n// \thandleProfilePicSelect() {\n// \t\tthis.setState(state => ({\n// \t\t\tsetProfilePic: !state.setProfilePic\n// \t\t}));\n// \t}\n// \thandleProfileDelete = type => {\n// \t\tconsole.log('type: ', type);\n// \t\tlet { id } = this.state;\n// \t\tswitch (type) {\n// \t\t\tcase 'BOXER':\n// \t\t\t\tAPI.graphql(graphqlOperation(Mutation.deleteBoxer(id)))\n// \t\t\t\t\t.then(res => console.log('Boxer profile deleted!'))\n// \t\t\t\t\t.then(state =>\n// \t\t\t\t\t\tthis.setState({\n// \t\t\t\t\t\t\tboxer: {},\n// \t\t\t\t\t\t\tid: null,\n// \t\t\t\t\t\t\tuserSub: null,\n// \t\t\t\t\t\t\tusername: null\n// \t\t\t\t\t\t})\n// \t\t\t\t\t)\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'GYM':\n// \t\t\t\tAPI.graphql(graphqlOperation(Mutation.deleteGym(id)))\n// \t\t\t\t\t.then(res => console.log('Gym profile deleted!'))\n// \t\t\t\t\t.then(state =>\n// \t\t\t\t\t\tthis.setState({ gym: {}, id: null, userSub: null, username: null })\n// \t\t\t\t\t)\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'SHOW':\n// \t\t\t\tAPI.graphql(graphqlOperation(Mutation.deleteShow(id)))\n// \t\t\t\t\t.then(res => console.log('Show profile deleted!'))\n// \t\t\t\t\t.then(state =>\n// \t\t\t\t\t\tthis.setState({ show: {}, id: null, userSub: null, username: null })\n// \t\t\t\t\t)\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tcase 'USER':\n// \t\t\t\tAPI.graphql(graphqlOperation(Mutation.deleteUser(id)))\n// \t\t\t\t\t.then(res => console.log('User profile deleted!'))\n// \t\t\t\t\t.then(state =>\n// \t\t\t\t\t\tthis.setState({ id: null, userSub: null, username: null })\n// \t\t\t\t\t)\n// \t\t\t\t\t.catch(err => console.error(err));\n// \t\t\t\tbreak;\n// \t\t\tdefault:\n// \t\t\t\tconsole.error('No case in handleProfileDelete!');\n// \t\t\t\treturn;\n// \t\t}\n// \t};\n\n// \thandlePicSelect(index) {\n// \t\tconsole.log('index: ', index);\n// \t\tthis.setState({ activeIndex: index });\n// \t}\n\n// \trender() {\n// \t\tlet options = [\n// \t\t\t{ value: 'ARTICLE', label: 'Publish an Article', type: 'Article' },\n// \t\t\t{ value: 'BOXER', label: 'Create a Boxer Profile', type: 'Boxer' },\n// \t\t\t{ value: 'GYM', label: 'Create a Gym Profile', type: 'Gym' },\n// \t\t\t{\n// \t\t\t\tvalue: 'PODCAST',\n// \t\t\t\tlabel: 'Publish a Video or Audio Podcast',\n// \t\t\t\ttype: 'Podcast'\n// \t\t\t},\n// \t\t\t{ value: 'SHOW', label: 'Post a Show', type: 'Show' }\n// \t\t\t// {value: \"USER\",label:\"Your Profile Info\",type: \"User\" },\n// \t\t];\n\n// \t\tlet {\n// \t\t\tpercentLoaded,\n// \t\t\tactiveIndex,\n// \t\t\tprofilePic,\n// \t\t\tsetProfilePic,\n// \t\t\ts3Images,\n// \t\t\tarticles,\n// \t\t\tboxer,\n// \t\t\tgym,\n// \t\t\tshow,\n// \t\t\tuserProfilePic,\n// \t\t\tusername,\n// \t\t\tloading,\n// \t\t\taccountType,\n// \t\t\tuserTypeSelectOption\n// \t\t} = this.state;\n// \t\tlet {\n// \t\t\tuserEmail,\n// \t\t\tuserFirstName,\n// \t\t\tuserLastName,\n// \t\t\tuserDisplayName,\n// \t\t\tid,\n// \t\t\tfollowers,\n// \t\t\tfollowing,\n// \t\t\treminders\n// \t\t} = this.state.user && this.state.user.userEmail ? this.state.user : {};\n// \t\tlet { userSub } = this.state.userSub ? this.state : '';\n\n// \t\tlet user = {\n// \t\t\tuserSub,\n// \t\t\tuserDisplayName,\n// \t\t\tuserEmail,\n// \t\t\tuserFirstName,\n// \t\t\tuserLastName,\n// \t\t\tid,\n// \t\t\tusername,\n// \t\t\taccountType,\n// \t\t\tuserProfilePic,\n// \t\t\tprofilePic\n// \t\t};\n\n// \t\tlet boxerInfo = userSub && boxer.boxerFirstName ? boxer : null;\n// \t\tlet gymInfo = userSub && gym.gymName ? gym : null;\n// \t\tlet showInfo = userSub && show.showTitle ? show : null;\n// \t\tlet userInfo = userSub && userDisplayName ? user : null;\n// \t\tlet userArticles = userSub && articles.length > 0 ? articles : null;\n// \t\tlet profileImages =\n// \t\t\tuserSub && s3Images && s3Images.length > 0 ? s3Images : null;\n// \t\tlet userPic = 'https://boxers.s3.amazonaws.com/public/' + userProfilePic;\n// \t\t// console.log('percentLoaded: ', this.state.percentLoaded);\n// \t\treturn (\n// \t\t\t<>\n// \t\t\t\t<div className=\"dashboard-page-wrapper\">\n// \t\t\t\t\t<h1>Welcome, {username}</h1>\n// \t\t\t\t\t{loading && <div className=\"loader\">{loader}</div>}\n// \t\t\t\t\t<div style={{ width: '50%', margin: 'auto' }}>\n// \t\t\t\t\t\t<Select\n// \t\t\t\t\t\t\tonChange={this.handleSelectChange}\n// \t\t\t\t\t\t\tvalue={userTypeSelectOption}\n// \t\t\t\t\t\t\toptions={options}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"dashboard-main\">\n// \t\t\t\t\t\t<div className=\"dashboard-user-info\">\n// \t\t\t\t\t\t\t<h1>Your Profile </h1>\n// \t\t\t\t\t\t\t<div className=\"dashboard-profile-pic\">\n// \t\t\t\t\t\t\t\t{userProfilePic ? (\n// \t\t\t\t\t\t\t\t\t<Image src={userPic} bordered />\n// \t\t\t\t\t\t\t\t) : (\n// \t\t\t\t\t\t\t\t\t<Image\n// \t\t\t\t\t\t\t\t\t\tstyle={{ display: 'block', margin: 'auto' }}\n// \t\t\t\t\t\t\t\t\t\tsrc={Boxer}\n// \t\t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t\t<h2>Profile Picture</h2>\n// \t\t\t\t\t\t\t\t<Form.Button\n// \t\t\t\t\t\t\t\t\tonClick={() => {\n// \t\t\t\t\t\t\t\t\t\tdocument.getElementById('profile-file-input').click();\n// \t\t\t\t\t\t\t\t\t\tthis.handleProfilePicSelect();\n// \t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\tdisabled={loading}\n// \t\t\t\t\t\t\t\t\ticon=\"file image outline\"\n// \t\t\t\t\t\t\t\t\tcontent={\n// \t\t\t\t\t\t\t\t\t\tloading ? 'Uploading...' : 'Update Your Profile Image'\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t\t<input\n// \t\t\t\t\t\t\t\t\tid=\"profile-file-input\"\n// \t\t\t\t\t\t\t\t\ttype=\"file\"\n// \t\t\t\t\t\t\t\t\taccept=\"image/*\"\n// \t\t\t\t\t\t\t\t\tonChange={e => this.uploadMediaToS3(e, 'profile')}\n// \t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t{userInfo && (\n// \t\t\t\t\t\t\t\t<Forms.UserForm\n// \t\t\t\t\t\t\t\t\tuserInfo={userInfo}\n// \t\t\t\t\t\t\t\t\thandleDashboardPutForms={this.handleDashboardPutForms}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t)}\n// \t\t\t\t\t\t\t<div className=\"dashboard-widgets\">\n// \t\t\t\t\t\t\t\t<div className=\"dashboard-following\">\n// \t\t\t\t\t\t\t\t\t<h2>You are Following:</h2>\n// \t\t\t\t\t\t\t\t\t{this.state.user.following &&\n// \t\t\t\t\t\t\t\t\tthis.state.user.following.length > 0\n// \t\t\t\t\t\t\t\t\t\t? this.state.user.following.map((el, i) => {\n// \t\t\t\t\t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<ul key={i}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={i}>{el}</li>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n// \t\t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t  })\n// \t\t\t\t\t\t\t\t\t\t: 'null'}\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div className=\"dashboard-followers\">\n// \t\t\t\t\t\t\t\t\t<h2>Your Followers</h2>\n// \t\t\t\t\t\t\t\t\t{this.state.user.followers &&\n// \t\t\t\t\t\t\t\t\tthis.state.user.followers.length > 0\n// \t\t\t\t\t\t\t\t\t\t? this.state.user.followers.map((el, i) => {\n// \t\t\t\t\t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<ul key={i}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={i}>{el}</li>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n// \t\t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t  })\n// \t\t\t\t\t\t\t\t\t\t: 'null'}\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t\t<div className=\"dashboard-reminders\">\n// \t\t\t\t\t\t\t\t\t<h2>Your Reminders</h2>\n// \t\t\t\t\t\t\t\t\t{this.state.user.reminders &&\n// \t\t\t\t\t\t\t\t\tthis.state.user.reminders.length > 0\n// \t\t\t\t\t\t\t\t\t\t? this.state.user.reminders.map((el, i) => {\n// \t\t\t\t\t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t\t\t\t\t<ul key={i}>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={i}>{el}</li>\n// \t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\n// \t\t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t  })\n// \t\t\t\t\t\t\t\t\t\t: 'You have no reminders set.'}\n// \t\t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t\t<div className=\"dashboard-media\">\n// \t\t\t\t\t\t\t<Media\n// \t\t\t\t\t\t\t\tpercentLoaded={percentLoaded}\n// \t\t\t\t\t\t\t\tloading={loading}\n// \t\t\t\t\t\t\t\tactiveIndex={activeIndex}\n// \t\t\t\t\t\t\t\thandlePicSelect={this.handlePicSelect}\n// \t\t\t\t\t\t\t\thandleProfilePicSelect={this.handleProfilePicSelect}\n// \t\t\t\t\t\t\t\tprofileImages={profileImages}\n// \t\t\t\t\t\t\t\tuserInfo={user}\n// \t\t\t\t\t\t\t\tsetProfilePic={setProfilePic}\n// \t\t\t\t\t\t\t\tuploadMediaToS3={this.uploadMediaToS3}\n// \t\t\t\t\t\t\t\tprofilePic={profilePic}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"dashboard-forms\">\n// \t\t\t\t\t\t{userArticles && userTypeSelectOption === 'ARTICLE' ? (\n// \t\t\t\t\t\t\t<Editor\n// \t\t\t\t\t\t\t\tuserInfo={userInfo}\n// \t\t\t\t\t\t\t\tarticles={userArticles}\n// \t\t\t\t\t\t\t\thandleProfileDelete={this.handleProfileDelete}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t) : null}\n// \t\t\t\t\t\t{boxerInfo && userTypeSelectOption === 'BOXER' ? (\n// \t\t\t\t\t\t\t<Forms.BoxerForm\n// \t\t\t\t\t\t\t\tuserInfo={userInfo}\n// \t\t\t\t\t\t\t\tboxerInfo={boxerInfo}\n// \t\t\t\t\t\t\t\thandleDashboardPutForms={this.handleDashboardPutForms}\n// \t\t\t\t\t\t\t\thandleProfileDelete={this.handleProfileDelete}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t) : null}\n// \t\t\t\t\t\t{gymInfo && userTypeSelectOption === 'GYM' ? (\n// \t\t\t\t\t\t\t<Forms.GymForm\n// \t\t\t\t\t\t\t\tuserInfo={userInfo}\n// \t\t\t\t\t\t\t\tgymInfo={gymInfo}\n// \t\t\t\t\t\t\t\thandleDashboardPutForms={this.handleDashboardPutForms}\n// \t\t\t\t\t\t\t\thandleProfileDelete={this.handleProfileDelete}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t) : null}\n// \t\t\t\t\t\t{showInfo && userTypeSelectOption === 'SHOW' ? (\n// \t\t\t\t\t\t\t<Forms.ShowForm\n// \t\t\t\t\t\t\t\tuserInfo={userInfo}\n// \t\t\t\t\t\t\t\tshowInfo={showInfo}\n// \t\t\t\t\t\t\t\thandleDashboardPutForms={this.handleDashboardPutForms}\n// \t\t\t\t\t\t\t\thandleProfileDelete={this.handleProfileDelete}\n// \t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t) : null}\n\n// \t\t\t\t\t\t{userTypeSelectOption === 'PODCAST' && (\n// \t\t\t\t\t\t\t<h1>Podcast Support will be here shortly!</h1>\n// \t\t\t\t\t\t)}\n// \t\t\t\t\t\t{/* <Forms.PodcastForm \n//                         userInfo={userInfo}\n//                         podcastInfo={podcastInfo}\n//                         handleDashboardPutForms={this.handleDashboardPutForms}\n//                         handleProfileDelete={this.handleProfileDelete}\n//                     /> : null} */}\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t</>\n// \t\t);\n// \t}\n// }\n\n// export default Dashboard;\n// // export default withAuthenticator(Dashboard, { federated });\n","/Users/andrewkroll/Documents/Projects/f2/src/components/utilities/editor.js",["214","215","216","217","218","219","220","221","222","223","224","225"],"/Users/andrewkroll/Documents/Projects/f2/src/css/editor.js",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":10,"column":10,"nodeType":"232","messageId":"233","endLine":10,"endColumn":18},{"ruleId":"230","severity":1,"message":"234","line":10,"column":20,"nodeType":"232","messageId":"233","endLine":10,"endColumn":33},{"ruleId":"230","severity":1,"message":"235","line":2,"column":33,"nodeType":"232","messageId":"233","endLine":2,"endColumn":34},{"ruleId":"230","severity":1,"message":"236","line":11,"column":21,"nodeType":"232","messageId":"233","endLine":11,"endColumn":24},{"ruleId":"230","severity":1,"message":"237","line":12,"column":12,"nodeType":"232","messageId":"233","endLine":12,"endColumn":19},{"ruleId":"230","severity":1,"message":"238","line":12,"column":21,"nodeType":"232","messageId":"233","endLine":12,"endColumn":32},{"ruleId":"230","severity":1,"message":"239","line":14,"column":13,"nodeType":"232","messageId":"233","endLine":14,"endColumn":22},{"ruleId":"230","severity":1,"message":"240","line":14,"column":24,"nodeType":"232","messageId":"233","endLine":14,"endColumn":31},{"ruleId":"241","severity":1,"message":"242","line":36,"column":7,"nodeType":"243","endLine":36,"endColumn":9,"suggestions":"244"},{"ruleId":"230","severity":1,"message":"245","line":1,"column":26,"nodeType":"232","messageId":"233","endLine":1,"endColumn":35},{"ruleId":"230","severity":1,"message":"246","line":49,"column":7,"nodeType":"232","messageId":"233","endLine":49,"endColumn":14},{"ruleId":"230","severity":1,"message":"247","line":100,"column":8,"nodeType":"232","messageId":"233","endLine":100,"endColumn":18},{"ruleId":"248","severity":1,"message":"249","line":116,"column":7,"nodeType":"250","endLine":121,"endColumn":10},{"ruleId":"230","severity":1,"message":"251","line":5,"column":8,"nodeType":"232","messageId":"233","endLine":5,"endColumn":18},{"ruleId":"230","severity":1,"message":"252","line":6,"column":21,"nodeType":"232","messageId":"233","endLine":6,"endColumn":32},{"ruleId":"230","severity":1,"message":"253","line":33,"column":22,"nodeType":"232","messageId":"233","endLine":33,"endColumn":33},{"ruleId":"230","severity":1,"message":"254","line":34,"column":19,"nodeType":"232","messageId":"233","endLine":34,"endColumn":27},{"ruleId":"230","severity":1,"message":"255","line":83,"column":43,"nodeType":"232","messageId":"233","endLine":83,"endColumn":53},{"ruleId":"256","severity":1,"message":"257","line":96,"column":24,"nodeType":"258","messageId":"259","endLine":96,"endColumn":26},{"ruleId":"230","severity":1,"message":"260","line":113,"column":11,"nodeType":"232","messageId":"233","endLine":113,"endColumn":25},{"ruleId":"261","severity":1,"message":"262","line":130,"column":11,"nodeType":"263","messageId":"259","endLine":130,"endColumn":15,"fix":"264"},{"ruleId":"230","severity":1,"message":"245","line":1,"column":26,"nodeType":"232","messageId":"233","endLine":1,"endColumn":35},{"ruleId":"230","severity":1,"message":"265","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":13},{"ruleId":"230","severity":1,"message":"266","line":2,"column":15,"nodeType":"232","messageId":"233","endLine":2,"endColumn":24},{"ruleId":"230","severity":1,"message":"267","line":2,"column":26,"nodeType":"232","messageId":"233","endLine":2,"endColumn":33},{"ruleId":"230","severity":1,"message":"268","line":2,"column":35,"nodeType":"232","messageId":"233","endLine":2,"endColumn":51},{"ruleId":"230","severity":1,"message":"269","line":3,"column":10,"nodeType":"232","messageId":"233","endLine":3,"endColumn":17},{"ruleId":"230","severity":1,"message":"270","line":3,"column":19,"nodeType":"232","messageId":"233","endLine":3,"endColumn":26},{"ruleId":"230","severity":1,"message":"271","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":17},{"ruleId":"230","severity":1,"message":"272","line":5,"column":10,"nodeType":"232","messageId":"233","endLine":5,"endColumn":30},{"ruleId":"230","severity":1,"message":"273","line":5,"column":32,"nodeType":"232","messageId":"233","endLine":5,"endColumn":50},{"ruleId":"230","severity":1,"message":"274","line":6,"column":10,"nodeType":"232","messageId":"233","endLine":6,"endColumn":26},{"ruleId":"230","severity":1,"message":"275","line":6,"column":28,"nodeType":"232","messageId":"233","endLine":6,"endColumn":41},{"ruleId":"230","severity":1,"message":"276","line":6,"column":43,"nodeType":"232","messageId":"233","endLine":6,"endColumn":56},{"ruleId":"230","severity":1,"message":"277","line":7,"column":14,"nodeType":"232","messageId":"233","endLine":7,"endColumn":20},{"ruleId":"230","severity":1,"message":"278","line":14,"column":17,"nodeType":"232","messageId":"233","endLine":14,"endColumn":26},{"ruleId":"230","severity":1,"message":"279","line":15,"column":18,"nodeType":"232","messageId":"233","endLine":15,"endColumn":28},{"ruleId":"230","severity":1,"message":"280","line":16,"column":18,"nodeType":"232","messageId":"233","endLine":16,"endColumn":28},{"ruleId":"230","severity":1,"message":"281","line":65,"column":8,"nodeType":"232","messageId":"233","endLine":65,"endColumn":21},{"ruleId":"230","severity":1,"message":"282","line":74,"column":8,"nodeType":"232","messageId":"233","endLine":74,"endColumn":21},{"ruleId":"230","severity":1,"message":"283","line":83,"column":8,"nodeType":"232","messageId":"233","endLine":83,"endColumn":24},{"ruleId":"230","severity":1,"message":"284","line":90,"column":9,"nodeType":"232","messageId":"233","endLine":90,"endColumn":23},{"ruleId":"230","severity":1,"message":"285","line":91,"column":9,"nodeType":"232","messageId":"233","endLine":91,"endColumn":22},{"ruleId":"230","severity":1,"message":"286","line":92,"column":9,"nodeType":"232","messageId":"233","endLine":92,"endColumn":22},{"ruleId":"230","severity":1,"message":"287","line":93,"column":9,"nodeType":"232","messageId":"233","endLine":93,"endColumn":19},{"ruleId":"230","severity":1,"message":"288","line":94,"column":9,"nodeType":"232","messageId":"233","endLine":94,"endColumn":18},{"ruleId":"230","severity":1,"message":"289","line":95,"column":9,"nodeType":"232","messageId":"233","endLine":95,"endColumn":13},{"ruleId":"230","severity":1,"message":"290","line":96,"column":9,"nodeType":"232","messageId":"233","endLine":96,"endColumn":15},{"ruleId":"230","severity":1,"message":"291","line":97,"column":9,"nodeType":"232","messageId":"233","endLine":97,"endColumn":14},{"ruleId":"230","severity":1,"message":"292","line":98,"column":9,"nodeType":"232","messageId":"233","endLine":98,"endColumn":12},{"ruleId":"230","severity":1,"message":"293","line":99,"column":9,"nodeType":"232","messageId":"233","endLine":99,"endColumn":21},{"ruleId":"230","severity":1,"message":"294","line":100,"column":9,"nodeType":"232","messageId":"233","endLine":100,"endColumn":22},{"ruleId":"230","severity":1,"message":"295","line":101,"column":9,"nodeType":"232","messageId":"233","endLine":101,"endColumn":23},{"ruleId":"230","severity":1,"message":"296","line":102,"column":9,"nodeType":"232","messageId":"233","endLine":102,"endColumn":17},{"ruleId":"230","severity":1,"message":"297","line":109,"column":7,"nodeType":"232","messageId":"233","endLine":109,"endColumn":21},{"ruleId":"230","severity":1,"message":"298","line":113,"column":7,"nodeType":"232","messageId":"233","endLine":113,"endColumn":16},{"ruleId":"230","severity":1,"message":"299","line":114,"column":7,"nodeType":"232","messageId":"233","endLine":114,"endColumn":16},{"ruleId":"230","severity":1,"message":"300","line":116,"column":7,"nodeType":"232","messageId":"233","endLine":116,"endColumn":16},{"ruleId":"301","severity":1,"message":"302","line":75,"column":22,"nodeType":"303","messageId":"304","endLine":75,"endColumn":24},{"ruleId":"230","severity":1,"message":"305","line":3,"column":5,"nodeType":"232","messageId":"233","endLine":3,"endColumn":11},{"ruleId":"230","severity":1,"message":"306","line":4,"column":5,"nodeType":"232","messageId":"233","endLine":4,"endColumn":22},{"ruleId":"230","severity":1,"message":"307","line":5,"column":5,"nodeType":"232","messageId":"233","endLine":5,"endColumn":16},{"ruleId":"230","severity":1,"message":"308","line":6,"column":5,"nodeType":"232","messageId":"233","endLine":6,"endColumn":16},{"ruleId":"230","severity":1,"message":"309","line":7,"column":5,"nodeType":"232","messageId":"233","endLine":7,"endColumn":20},{"ruleId":"230","severity":1,"message":"310","line":8,"column":5,"nodeType":"232","messageId":"233","endLine":8,"endColumn":16},{"ruleId":"230","severity":1,"message":"311","line":9,"column":5,"nodeType":"232","messageId":"233","endLine":9,"endColumn":12},{"ruleId":"230","severity":1,"message":"312","line":10,"column":5,"nodeType":"232","messageId":"233","endLine":10,"endColumn":12},{"ruleId":"230","severity":1,"message":"313","line":11,"column":5,"nodeType":"232","messageId":"233","endLine":11,"endColumn":20},{"ruleId":"230","severity":1,"message":"314","line":13,"column":30,"nodeType":"232","messageId":"233","endLine":13,"endColumn":42},{"ruleId":"230","severity":1,"message":"315","line":22,"column":23,"nodeType":"232","messageId":"233","endLine":22,"endColumn":35},{"ruleId":"241","severity":1,"message":"316","line":78,"column":7,"nodeType":"243","endLine":78,"endColumn":9,"suggestions":"317"},{"ruleId":"230","severity":1,"message":"318","line":2,"column":9,"nodeType":"232","messageId":"233","endLine":2,"endColumn":13},{"ruleId":"230","severity":1,"message":"319","line":1,"column":16,"nodeType":"232","messageId":"233","endLine":1,"endColumn":24},{"ruleId":"241","severity":1,"message":"320","line":20,"column":8,"nodeType":"243","endLine":20,"endColumn":28,"suggestions":"321"},{"ruleId":"256","severity":1,"message":"257","line":22,"column":16,"nodeType":"258","messageId":"259","endLine":22,"endColumn":18},{"ruleId":"230","severity":1,"message":"322","line":2,"column":76,"nodeType":"232","messageId":"233","endLine":2,"endColumn":88},{"ruleId":"230","severity":1,"message":"323","line":7,"column":25,"nodeType":"232","messageId":"233","endLine":7,"endColumn":32},{"ruleId":"230","severity":1,"message":"324","line":7,"column":33,"nodeType":"232","messageId":"233","endLine":7,"endColumn":46},{"ruleId":"230","severity":1,"message":"325","line":2,"column":20,"nodeType":"232","messageId":"233","endLine":2,"endColumn":27},{"ruleId":"230","severity":1,"message":"326","line":2,"column":8,"nodeType":"232","messageId":"233","endLine":2,"endColumn":15},{"ruleId":"230","severity":1,"message":"266","line":4,"column":2,"nodeType":"232","messageId":"233","endLine":4,"endColumn":11},{"ruleId":"230","severity":1,"message":"267","line":5,"column":2,"nodeType":"232","messageId":"233","endLine":5,"endColumn":9},{"ruleId":"230","severity":1,"message":"265","line":6,"column":2,"nodeType":"232","messageId":"233","endLine":6,"endColumn":5},{"ruleId":"230","severity":1,"message":"268","line":7,"column":2,"nodeType":"232","messageId":"233","endLine":7,"endColumn":18},{"ruleId":"230","severity":1,"message":"327","line":10,"column":5,"nodeType":"232","messageId":"233","endLine":10,"endColumn":18},{"ruleId":"230","severity":1,"message":"328","line":11,"column":2,"nodeType":"232","messageId":"233","endLine":11,"endColumn":19},{"ruleId":"230","severity":1,"message":"329","line":12,"column":2,"nodeType":"232","messageId":"233","endLine":12,"endColumn":13},{"ruleId":"230","severity":1,"message":"270","line":13,"column":2,"nodeType":"232","messageId":"233","endLine":13,"endColumn":9},{"ruleId":"230","severity":1,"message":"330","line":32,"column":12,"nodeType":"232","messageId":"233","endLine":32,"endColumn":19},{"ruleId":"230","severity":1,"message":"279","line":32,"column":21,"nodeType":"232","messageId":"233","endLine":32,"endColumn":31},{"ruleId":"230","severity":1,"message":"331","line":33,"column":12,"nodeType":"232","messageId":"233","endLine":33,"endColumn":16},{"ruleId":"230","severity":1,"message":"332","line":41,"column":13,"nodeType":"232","messageId":"233","endLine":41,"endColumn":20},{"ruleId":"230","severity":1,"message":"333","line":61,"column":15,"nodeType":"232","messageId":"233","endLine":61,"endColumn":20},{"ruleId":"230","severity":1,"message":"326","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":15},{"ruleId":"230","severity":1,"message":"265","line":4,"column":18,"nodeType":"232","messageId":"233","endLine":4,"endColumn":21},{"ruleId":"230","severity":1,"message":"334","line":4,"column":23,"nodeType":"232","messageId":"233","endLine":4,"endColumn":27},{"ruleId":"230","severity":1,"message":"268","line":4,"column":29,"nodeType":"232","messageId":"233","endLine":4,"endColumn":45},{"ruleId":"230","severity":1,"message":"335","line":8,"column":9,"nodeType":"232","messageId":"233","endLine":8,"endColumn":18},{"ruleId":"230","severity":1,"message":"336","line":8,"column":20,"nodeType":"232","messageId":"233","endLine":8,"endColumn":23},{"ruleId":"230","severity":1,"message":"337","line":8,"column":60,"nodeType":"232","messageId":"233","endLine":8,"endColumn":65},{"ruleId":"230","severity":1,"message":"338","line":8,"column":67,"nodeType":"232","messageId":"233","endLine":8,"endColumn":71},{"ruleId":"230","severity":1,"message":"339","line":12,"column":11,"nodeType":"232","messageId":"233","endLine":12,"endColumn":20},{"ruleId":"230","severity":1,"message":"330","line":14,"column":12,"nodeType":"232","messageId":"233","endLine":14,"endColumn":19},{"ruleId":"230","severity":1,"message":"340","line":15,"column":12,"nodeType":"232","messageId":"233","endLine":15,"endColumn":20},{"ruleId":"230","severity":1,"message":"341","line":15,"column":22,"nodeType":"232","messageId":"233","endLine":15,"endColumn":33},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"no-unused-vars","'animated' is defined but never used.","Identifier","unusedVar","'useTransition' is defined but never used.","'a' is defined but never used.","'set' is assigned a value but never used.","'tonight' is assigned a value but never used.","'showTonight' is assigned a value but never used.","'transform' is assigned a value but never used.","'opacity' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'bingConfig' and 'bingUrl'. Either include them or remove the dependency array.","ArrayExpression",["344"],"'useEffect' is defined but never used.","'headers' is assigned a value but never used.","'renderTags' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'jwt_decode' is defined but never used.","'getGameType' is defined but never used.","'setIsTyping' is assigned a value but never used.","'setToken' is assigned a value but never used.","'predictive' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'sendPollAnswer' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"345","text":"346"},"'API' is defined but never used.","'Analytics' is defined but never used.","'Storage' is defined but never used.","'graphqlOperation' is defined but never used.","'S3Album' is defined but never used.","'S3Image' is defined but never used.","'Coverflow' is defined but never used.","'TwitterTimelineEmbed' is defined but never used.","'TwitterShareButton' is defined but never used.","'getSelectedBoxer' is defined but never used.","'makeImagesArr' is defined but never used.","'makeLabelsArr' is defined but never used.","'Button' is defined but never used.","'setBoxers' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setUserSub' is assigned a value but never used.","'makeImagesArr' is assigned a value but never used.","'makeLabelsArr' is assigned a value but never used.","'getSelectedBoxer' is assigned a value but never used.","'boxerFirstName' is assigned a value but never used.","'boxerLastName' is assigned a value but never used.","'boxerRingname' is assigned a value but never used.","'boxerState' is assigned a value but never used.","'boxerCity' is assigned a value but never used.","'wins' is assigned a value but never used.","'losses' is assigned a value but never used.","'draws' is assigned a value but never used.","'kos' is assigned a value but never used.","'boxerTwitter' is assigned a value but never used.","'boxerFacebook' is assigned a value but never used.","'boxerInstagram' is assigned a value but never used.","'boxerGym' is assigned a value but never used.","'twitterOptions' is assigned a value but never used.","'labelsArr' is assigned a value but never used.","'imagesArr' is assigned a value but never used.","'albumPath' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'create' is defined but never used.","'isPlayerSupported' is defined but never used.","'MediaPlayer' is defined but never used.","'PlayerError' is defined but never used.","'PlayerEventType' is defined but never used.","'PlayerState' is defined but never used.","'Quality' is defined but never used.","'TextCue' is defined but never used.","'TextMetadataCue' is defined but never used.","'QuestionText' is defined but never used.","'setStreamUrl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setButtonsDisabled', 'setQuestion', 'setStartBroadcast', 'setStartTimer', 'startBroadcast', and 'streamUrl'. Either include them or remove the dependency array. If 'setStartBroadcast' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["347"],"'Link' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'gameType' and 'setCounter'. Either include them or remove the dependency array. If 'setCounter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["348"],"'VideoWrapper' is defined but never used.","'creator' is assigned a value but never used.","'datePublished' is assigned a value but never used.","'Message' is defined but never used.","'Amplify' is defined but never used.","'Authenticator' is defined but never used.","'withAuthenticator' is defined but never used.","'PhotoPicker' is defined but never used.","'loading' is assigned a value but never used.","'user' is assigned a value but never used.","'getUser' is assigned a value but never used.","'value' is assigned a value but never used.","'Auth' is defined but never used.","'TableText' is defined but never used.","'Row' is defined but never used.","'Title' is defined but never used.","'Text' is defined but never used.","'editorRef' is assigned a value but never used.","'articles' is assigned a value but never used.","'setArticles' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},[5204,5215],"",{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},"Update the dependencies array to be: [bingConfig, bingUrl]",{"range":"355","text":"356"},"Update the dependencies array to be: [setButtonsDisabled, setQuestion, setStartBroadcast, setStartTimer, startBroadcast, streamUrl]",{"range":"357","text":"358"},"Update the dependencies array to be: [counter, gameType, setCounter, startTimer]",{"range":"359","text":"360"},[1366,1368],"[bingConfig, bingUrl]",[3255,3257],"[setButtonsDisabled, setQuestion, setStartBroadcast, setStartTimer, startBroadcast, streamUrl]",[659,679],"[counter, gameType, setCounter, startTimer]"]